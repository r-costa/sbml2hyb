% --------------------------------------------------------------------------
% hybrid model definition data structure

% Species
chassagnole1hyb.nspecies=11;
chassagnole1hyb.species(1).id="adp";
chassagnole1hyb.species(1).val=0;
chassagnole1hyb.species(1).compartment="compartment";
chassagnole1hyb.species(1).fixed=0;
chassagnole1hyb.species(1).min=0;
chassagnole1hyb.species(1).max=15;
chassagnole1hyb.species(1).isres=1;
chassagnole1hyb.species(2).id="asa";
chassagnole1hyb.species(2).val=0;
chassagnole1hyb.species(2).compartment="compartment";
chassagnole1hyb.species(2).fixed=0;
chassagnole1hyb.species(2).min=0;
chassagnole1hyb.species(2).max=15;
chassagnole1hyb.species(2).isres=1;
chassagnole1hyb.species(3).id="asp";
chassagnole1hyb.species(3).val=2;
chassagnole1hyb.species(3).compartment="compartment";
chassagnole1hyb.species(3).fixed=0;
chassagnole1hyb.species(3).min=0;
chassagnole1hyb.species(3).max=15;
chassagnole1hyb.species(3).isres=1;
chassagnole1hyb.species(4).id="aspp";
chassagnole1hyb.species(4).val=0;
chassagnole1hyb.species(4).compartment="compartment";
chassagnole1hyb.species(4).fixed=0;
chassagnole1hyb.species(4).min=0;
chassagnole1hyb.species(4).max=15;
chassagnole1hyb.species(4).isres=1;
chassagnole1hyb.species(5).id="atp";
chassagnole1hyb.species(5).val=10;
chassagnole1hyb.species(5).compartment="compartment";
chassagnole1hyb.species(5).fixed=0;
chassagnole1hyb.species(5).min=0;
chassagnole1hyb.species(5).max=15;
chassagnole1hyb.species(5).isres=1;
chassagnole1hyb.species(6).id="hs";
chassagnole1hyb.species(6).val=0;
chassagnole1hyb.species(6).compartment="compartment";
chassagnole1hyb.species(6).fixed=0;
chassagnole1hyb.species(6).min=0;
chassagnole1hyb.species(6).max=15;
chassagnole1hyb.species(6).isres=1;
chassagnole1hyb.species(7).id="hsp";
chassagnole1hyb.species(7).val=0;
chassagnole1hyb.species(7).compartment="compartment";
chassagnole1hyb.species(7).fixed=0;
chassagnole1hyb.species(7).min=0;
chassagnole1hyb.species(7).max=15;
chassagnole1hyb.species(7).isres=1;
chassagnole1hyb.species(8).id="nadp";
chassagnole1hyb.species(8).val=0;
chassagnole1hyb.species(8).compartment="compartment";
chassagnole1hyb.species(8).fixed=0;
chassagnole1hyb.species(8).min=0;
chassagnole1hyb.species(8).max=15;
chassagnole1hyb.species(8).isres=1;
chassagnole1hyb.species(9).id="nadph";
chassagnole1hyb.species(9).val=2;
chassagnole1hyb.species(9).compartment="compartment";
chassagnole1hyb.species(9).fixed=0;
chassagnole1hyb.species(9).min=0;
chassagnole1hyb.species(9).max=15;
chassagnole1hyb.species(9).isres=1;
chassagnole1hyb.species(10).id="phos";
chassagnole1hyb.species(10).val=0;
chassagnole1hyb.species(10).compartment="compartment";
chassagnole1hyb.species(10).fixed=0;
chassagnole1hyb.species(10).min=0;
chassagnole1hyb.species(10).max=15;
chassagnole1hyb.species(10).isres=1;
chassagnole1hyb.species(11).id="thr";
chassagnole1hyb.species(11).val=2;
chassagnole1hyb.species(11).compartment="compartment";
chassagnole1hyb.species(11).fixed=0;
chassagnole1hyb.species(11).min=0;
chassagnole1hyb.species(11).max=15;
chassagnole1hyb.species(11).isres=1;

% Compartments
chassagnole1hyb.ncompartments=1;
chassagnole1hyb.compartments(1).id="compartment";
chassagnole1hyb.compartments(1).val=1;
chassagnole1hyb.compartments(1).fixed=1;
chassagnole1hyb.compartments(1).min=0;
chassagnole1hyb.compartments(1).max=15;
chassagnole1hyb.compartments(1).isres=0;

% Parameters
chassagnole1hyb.nparameters=179;
chassagnole1hyb.parameters(1).id="vm11";
chassagnole1hyb.parameters(1).val="0.15";
chassagnole1hyb.parameters(1).fixed=0;
chassagnole1hyb.parameters(1).reaction="global";
chassagnole1hyb.parameters(2).id="keqak";
chassagnole1hyb.parameters(2).val="0.00064";
chassagnole1hyb.parameters(2).fixed=0;
chassagnole1hyb.parameters(2).reaction="global";
chassagnole1hyb.parameters(3).id="k11";
chassagnole1hyb.parameters(3).val="0.97";
chassagnole1hyb.parameters(3).fixed=0;
chassagnole1hyb.parameters(3).reaction="global";
chassagnole1hyb.parameters(4).id="k1thr";
chassagnole1hyb.parameters(4).val="0.167";
chassagnole1hyb.parameters(4).fixed=0;
chassagnole1hyb.parameters(4).reaction="global";
chassagnole1hyb.parameters(5).id="nak1";
chassagnole1hyb.parameters(5).val="4.09";
chassagnole1hyb.parameters(5).fixed=0;
chassagnole1hyb.parameters(5).reaction="global";
chassagnole1hyb.parameters(6).id="alpha";
chassagnole1hyb.parameters(6).val="2.47";
chassagnole1hyb.parameters(6).fixed=0;
chassagnole1hyb.parameters(6).reaction="global";
chassagnole1hyb.parameters(7).id="k1aspp";
chassagnole1hyb.parameters(7).val="0.017";
chassagnole1hyb.parameters(7).fixed=0;
chassagnole1hyb.parameters(7).reaction="global";
chassagnole1hyb.parameters(8).id="k1atp";
chassagnole1hyb.parameters(8).val="0.98";
chassagnole1hyb.parameters(8).fixed=0;
chassagnole1hyb.parameters(8).reaction="global";
chassagnole1hyb.parameters(9).id="k1adp";
chassagnole1hyb.parameters(9).val="0.25";
chassagnole1hyb.parameters(9).fixed=0;
chassagnole1hyb.parameters(9).reaction="global";
chassagnole1hyb.parameters(10).id="vm13";
chassagnole1hyb.parameters(10).val="0.0722";
chassagnole1hyb.parameters(10).fixed=0;
chassagnole1hyb.parameters(10).reaction="global";
chassagnole1hyb.parameters(11).id="lys";
chassagnole1hyb.parameters(11).val="0.46";
chassagnole1hyb.parameters(11).fixed=0;
chassagnole1hyb.parameters(11).reaction="global";
chassagnole1hyb.parameters(12).id="k1lys";
chassagnole1hyb.parameters(12).val="0.391";
chassagnole1hyb.parameters(12).fixed=0;
chassagnole1hyb.parameters(12).reaction="global";
chassagnole1hyb.parameters(13).id="nak3";
chassagnole1hyb.parameters(13).val="2.8";
chassagnole1hyb.parameters(13).fixed=0;
chassagnole1hyb.parameters(13).reaction="global";
chassagnole1hyb.parameters(14).id="k13";
chassagnole1hyb.parameters(14).val="0.32";
chassagnole1hyb.parameters(14).fixed=0;
chassagnole1hyb.parameters(14).reaction="global";
chassagnole1hyb.parameters(15).id="k13aspp";
chassagnole1hyb.parameters(15).val="0.017";
chassagnole1hyb.parameters(15).fixed=0;
chassagnole1hyb.parameters(15).reaction="global";
chassagnole1hyb.parameters(16).id="k13atp";
chassagnole1hyb.parameters(16).val="0.22";
chassagnole1hyb.parameters(16).fixed=0;
chassagnole1hyb.parameters(16).reaction="global";
chassagnole1hyb.parameters(17).id="k13adp";
chassagnole1hyb.parameters(17).val="0.25";
chassagnole1hyb.parameters(17).fixed=0;
chassagnole1hyb.parameters(17).reaction="global";
chassagnole1hyb.parameters(18).id="vm2f";
chassagnole1hyb.parameters(18).val="0.1812";
chassagnole1hyb.parameters(18).fixed=0;
chassagnole1hyb.parameters(18).reaction="global";
chassagnole1hyb.parameters(19).id="k2eq";
chassagnole1hyb.parameters(19).val="56.4150334574039";
chassagnole1hyb.parameters(19).fixed=0;
chassagnole1hyb.parameters(19).reaction="global";
chassagnole1hyb.parameters(20).id="k2aspp";
chassagnole1hyb.parameters(20).val="0.022";
chassagnole1hyb.parameters(20).fixed=0;
chassagnole1hyb.parameters(20).reaction="global";
chassagnole1hyb.parameters(21).id="k2asa";
chassagnole1hyb.parameters(21).val="0.11";
chassagnole1hyb.parameters(21).fixed=0;
chassagnole1hyb.parameters(21).reaction="global";
chassagnole1hyb.parameters(22).id="k2p";
chassagnole1hyb.parameters(22).val="10";
chassagnole1hyb.parameters(22).fixed=0;
chassagnole1hyb.parameters(22).reaction="global";
chassagnole1hyb.parameters(23).id="k2nadph";
chassagnole1hyb.parameters(23).val="0.029";
chassagnole1hyb.parameters(23).fixed=0;
chassagnole1hyb.parameters(23).reaction="global";
chassagnole1hyb.parameters(24).id="k2nadp";
chassagnole1hyb.parameters(24).val="0.144";
chassagnole1hyb.parameters(24).fixed=0;
chassagnole1hyb.parameters(24).reaction="global";
chassagnole1hyb.parameters(25).id="katpase";
chassagnole1hyb.parameters(25).val="4.1e-05";
chassagnole1hyb.parameters(25).fixed=0;
chassagnole1hyb.parameters(25).reaction="global";
chassagnole1hyb.parameters(26).id="prot";
chassagnole1hyb.parameters(26).val="202";
chassagnole1hyb.parameters(26).reaction="global";
chassagnole1hyb.parameters(26).fixed=0;
chassagnole1hyb.parameters(27).id="vm3f";
chassagnole1hyb.parameters(27).val="1.001";
chassagnole1hyb.parameters(27).reaction="global";
chassagnole1hyb.parameters(27).fixed=0;
chassagnole1hyb.parameters(28).id="k3eq";
chassagnole1hyb.parameters(28).val="3162.27766016838";
chassagnole1hyb.parameters(28).reaction="global";
chassagnole1hyb.parameters(28).fixed=0;
chassagnole1hyb.parameters(29).id="k3thr";
chassagnole1hyb.parameters(29).val="0.097";
chassagnole1hyb.parameters(29).reaction="global";
chassagnole1hyb.parameters(29).fixed=0;
chassagnole1hyb.parameters(30).id="nhdh1";
chassagnole1hyb.parameters(30).val="1.41";
chassagnole1hyb.parameters(30).reaction="global";
chassagnole1hyb.parameters(30).fixed=0;
chassagnole1hyb.parameters(31).id="alpha3";
chassagnole1hyb.parameters(31).val="3.93";
chassagnole1hyb.parameters(31).reaction="global";
chassagnole1hyb.parameters(31).fixed=0;
chassagnole1hyb.parameters(32).id="k3asa";
chassagnole1hyb.parameters(32).val="0.24";
chassagnole1hyb.parameters(32).reaction="global";
chassagnole1hyb.parameters(32).fixed=0;
chassagnole1hyb.parameters(33).id="k3hs";
chassagnole1hyb.parameters(33).val="3.39";
chassagnole1hyb.parameters(33).reaction="global";
chassagnole1hyb.parameters(33).fixed=0;
chassagnole1hyb.parameters(34).id="k3nadph";
chassagnole1hyb.parameters(34).val="0.037";
chassagnole1hyb.parameters(34).reaction="global";
chassagnole1hyb.parameters(34).fixed=0;
chassagnole1hyb.parameters(35).id="k3nadp";
chassagnole1hyb.parameters(35).val="0.067";
chassagnole1hyb.parameters(35).reaction="global";
chassagnole1hyb.parameters(35).fixed=0;
chassagnole1hyb.parameters(36).id="vm4f";
chassagnole1hyb.parameters(36).val="0.1";
chassagnole1hyb.parameters(36).reaction="global";
chassagnole1hyb.parameters(36).fixed=0;
chassagnole1hyb.parameters(37).id="lys1";
chassagnole1hyb.parameters(37).val="0.46";
chassagnole1hyb.parameters(37).reaction="global";
chassagnole1hyb.parameters(37).fixed=0;
chassagnole1hyb.parameters(38).id="k4lys";
chassagnole1hyb.parameters(38).val="9.45";
chassagnole1hyb.parameters(38).reaction="global";
chassagnole1hyb.parameters(38).fixed=0;
chassagnole1hyb.parameters(39).id="k4atp";
chassagnole1hyb.parameters(39).val="0.072";
chassagnole1hyb.parameters(39).reaction="global";
chassagnole1hyb.parameters(39).fixed=0;
chassagnole1hyb.parameters(40).id="k4ihs";
chassagnole1hyb.parameters(40).val="4.7";
chassagnole1hyb.parameters(40).reaction="global";
chassagnole1hyb.parameters(40).fixed=0;
chassagnole1hyb.parameters(41).id="k4hs";
chassagnole1hyb.parameters(41).val="0.11";
chassagnole1hyb.parameters(41).reaction="global";
chassagnole1hyb.parameters(41).fixed=0;
chassagnole1hyb.parameters(42).id="k4thr";
chassagnole1hyb.parameters(42).val="1.09";
chassagnole1hyb.parameters(42).reaction="global";
chassagnole1hyb.parameters(42).fixed=0;
chassagnole1hyb.parameters(43).id="k4iatp";
chassagnole1hyb.parameters(43).val="4.35";
chassagnole1hyb.parameters(43).reaction="global";
chassagnole1hyb.parameters(43).fixed=0;
chassagnole1hyb.parameters(44).id="knadph";
chassagnole1hyb.parameters(44).val="5.4e-06";
chassagnole1hyb.parameters(44).reaction="global";
chassagnole1hyb.parameters(44).fixed=0;
chassagnole1hyb.parameters(45).id="prot1";
chassagnole1hyb.parameters(45).val="202";
chassagnole1hyb.parameters(45).reaction="global";
chassagnole1hyb.parameters(45).fixed=0;
chassagnole1hyb.parameters(46).id="vm5";
chassagnole1hyb.parameters(46).val="0.0434";
chassagnole1hyb.parameters(46).reaction="global";
chassagnole1hyb.parameters(46).fixed=0;
chassagnole1hyb.parameters(47).id="k5hsp";
chassagnole1hyb.parameters(47).val="0.31";
chassagnole1hyb.parameters(47).reaction="global";
chassagnole1hyb.parameters(47).fixed=0;
chassagnole1hyb.parameters(48).id="w1";
chassagnole1hyb.parameters(48).val="-0.165946690738865";
chassagnole1hyb.parameters(48).reaction="global";
chassagnole1hyb.parameters(48).fixed=0;
chassagnole1hyb.parameters(49).id="w2";
chassagnole1hyb.parameters(49).val="-0.375131857351756";
chassagnole1hyb.parameters(49).reaction="global";
chassagnole1hyb.parameters(49).fixed=0;
chassagnole1hyb.parameters(50).id="w3";
chassagnole1hyb.parameters(50).val="0.391501165256806";
chassagnole1hyb.parameters(50).reaction="global";
chassagnole1hyb.parameters(50).fixed=0;
chassagnole1hyb.parameters(51).id="w4";
chassagnole1hyb.parameters(51).val="0.402640709460064";
chassagnole1hyb.parameters(51).reaction="global";
chassagnole1hyb.parameters(51).fixed=0;
chassagnole1hyb.parameters(52).id="w5";
chassagnole1hyb.parameters(52).val="-0.147750054917509";
chassagnole1hyb.parameters(52).reaction="global";
chassagnole1hyb.parameters(52).fixed=0;
chassagnole1hyb.parameters(53).id="w6";
chassagnole1hyb.parameters(53).val="-1.21813828027195";
chassagnole1hyb.parameters(53).reaction="global";
chassagnole1hyb.parameters(53).fixed=0;
chassagnole1hyb.parameters(54).id="w7";
chassagnole1hyb.parameters(54).val="-0.126317802247178";
chassagnole1hyb.parameters(54).reaction="global";
chassagnole1hyb.parameters(54).fixed=0;
chassagnole1hyb.parameters(55).id="w8";
chassagnole1hyb.parameters(55).val="-1.57100230894598";
chassagnole1hyb.parameters(55).reaction="global";
chassagnole1hyb.parameters(55).fixed=0;
chassagnole1hyb.parameters(56).id="w9";
chassagnole1hyb.parameters(56).val="-0.660740661903303";
chassagnole1hyb.parameters(56).reaction="global";
chassagnole1hyb.parameters(56).fixed=0;
chassagnole1hyb.parameters(57).id="w10";
chassagnole1hyb.parameters(57).val="0.0336011150839577";
chassagnole1hyb.parameters(57).reaction="global";
chassagnole1hyb.parameters(57).fixed=0;
chassagnole1hyb.parameters(58).id="w11";
chassagnole1hyb.parameters(58).val="0.0218275736700771";
chassagnole1hyb.parameters(58).reaction="global";
chassagnole1hyb.parameters(58).fixed=0;
chassagnole1hyb.parameters(59).id="w12";
chassagnole1hyb.parameters(59).val="0.289153687880748";
chassagnole1hyb.parameters(59).reaction="global";
chassagnole1hyb.parameters(59).fixed=0;
chassagnole1hyb.parameters(60).id="w13";
chassagnole1hyb.parameters(60).val="-0.170165281121828";
chassagnole1hyb.parameters(60).reaction="global";
chassagnole1hyb.parameters(60).fixed=0;
chassagnole1hyb.parameters(61).id="w14";
chassagnole1hyb.parameters(61).val="0.454082582548758";
chassagnole1hyb.parameters(61).reaction="global";
chassagnole1hyb.parameters(61).fixed=0;
chassagnole1hyb.parameters(62).id="w15";
chassagnole1hyb.parameters(62).val="-0.770450785719159";
chassagnole1hyb.parameters(62).reaction="global";
chassagnole1hyb.parameters(62).fixed=0;
chassagnole1hyb.parameters(63).id="w16";
chassagnole1hyb.parameters(63).val="-0.0696095116899654";
chassagnole1hyb.parameters(63).reaction="global";
chassagnole1hyb.parameters(63).fixed=0;
chassagnole1hyb.parameters(64).id="w17";
chassagnole1hyb.parameters(64).val="0.366575976489541";
chassagnole1hyb.parameters(64).reaction="global";
chassagnole1hyb.parameters(64).fixed=0;
chassagnole1hyb.parameters(65).id="w18";
chassagnole1hyb.parameters(65).val="0.425184693046979";
chassagnole1hyb.parameters(65).reaction="global";
chassagnole1hyb.parameters(65).fixed=0;
chassagnole1hyb.parameters(66).id="w19";
chassagnole1hyb.parameters(66).val="-1.28241058918075";
chassagnole1hyb.parameters(66).reaction="global";
chassagnole1hyb.parameters(66).fixed=0;
chassagnole1hyb.parameters(67).id="w20";
chassagnole1hyb.parameters(67).val="0.934110671362061";
chassagnole1hyb.parameters(67).reaction="global";
chassagnole1hyb.parameters(67).fixed=0;
chassagnole1hyb.parameters(68).id="w21";
chassagnole1hyb.parameters(68).val="-0.0495388731562902";
chassagnole1hyb.parameters(68).reaction="global";
chassagnole1hyb.parameters(68).fixed=0;
chassagnole1hyb.parameters(69).id="w22";
chassagnole1hyb.parameters(69).val="0.166466713704150";
chassagnole1hyb.parameters(69).reaction="global";
chassagnole1hyb.parameters(69).fixed=0;
chassagnole1hyb.parameters(70).id="w23";
chassagnole1hyb.parameters(70).val="-0.163567320363926";
chassagnole1hyb.parameters(70).reaction="global";
chassagnole1hyb.parameters(70).fixed=0;
chassagnole1hyb.parameters(71).id="w24";
chassagnole1hyb.parameters(71).val="0.180513455728567";
chassagnole1hyb.parameters(71).reaction="global";
chassagnole1hyb.parameters(71).fixed=0;
chassagnole1hyb.parameters(72).id="w25";
chassagnole1hyb.parameters(72).val="-0.115206973415059";
chassagnole1hyb.parameters(72).reaction="global";
chassagnole1hyb.parameters(72).fixed=0;
chassagnole1hyb.parameters(73).id="w26";
chassagnole1hyb.parameters(73).val="0.317329224087120";
chassagnole1hyb.parameters(73).reaction="global";
chassagnole1hyb.parameters(73).fixed=0;
chassagnole1hyb.parameters(74).id="w27";
chassagnole1hyb.parameters(74).val="0.755423991306937";
chassagnole1hyb.parameters(74).reaction="global";
chassagnole1hyb.parameters(74).fixed=0;
chassagnole1hyb.parameters(75).id="w28";
chassagnole1hyb.parameters(75).val="0.523643323585012";
chassagnole1hyb.parameters(75).reaction="global";
chassagnole1hyb.parameters(75).fixed=0;
chassagnole1hyb.parameters(76).id="w29";
chassagnole1hyb.parameters(76).val="0.00149530940048717";
chassagnole1hyb.parameters(76).reaction="global";
chassagnole1hyb.parameters(76).fixed=0;
chassagnole1hyb.parameters(77).id="w30";
chassagnole1hyb.parameters(77).val="0.0510645046685436";
chassagnole1hyb.parameters(77).reaction="global";
chassagnole1hyb.parameters(77).fixed=0;
chassagnole1hyb.parameters(78).id="w31";
chassagnole1hyb.parameters(78).val="-0.0767757465794122";
chassagnole1hyb.parameters(78).reaction="global";
chassagnole1hyb.parameters(78).fixed=0;
chassagnole1hyb.parameters(79).id="w32";
chassagnole1hyb.parameters(79).val="-0.0897543669114445";
chassagnole1hyb.parameters(79).reaction="global";
chassagnole1hyb.parameters(79).fixed=0;
chassagnole1hyb.parameters(80).id="w33";
chassagnole1hyb.parameters(80).val="0.187574444563332";
chassagnole1hyb.parameters(80).reaction="global";
chassagnole1hyb.parameters(80).fixed=0;
chassagnole1hyb.parameters(81).id="w34";
chassagnole1hyb.parameters(81).val="-0.341036222113740";
chassagnole1hyb.parameters(81).reaction="global";
chassagnole1hyb.parameters(81).fixed=0;
chassagnole1hyb.parameters(82).id="w35";
chassagnole1hyb.parameters(82).val="0.243445147014007";
chassagnole1hyb.parameters(82).reaction="global";
chassagnole1hyb.parameters(82).fixed=0;
chassagnole1hyb.parameters(83).id="w36";
chassagnole1hyb.parameters(83).val="0.501274045837338";
chassagnole1hyb.parameters(83).reaction="global";
chassagnole1hyb.parameters(83).fixed=0;
chassagnole1hyb.parameters(84).id="w37";
chassagnole1hyb.parameters(84).val="-0.645098791400873";
chassagnole1hyb.parameters(84).reaction="global";
chassagnole1hyb.parameters(84).fixed=0;
chassagnole1hyb.parameters(85).id="w38";
chassagnole1hyb.parameters(85).val="-0.648334013097155";
chassagnole1hyb.parameters(85).reaction="global";
chassagnole1hyb.parameters(85).fixed=0;
chassagnole1hyb.parameters(86).id="w39";
chassagnole1hyb.parameters(86).val="0.674830414376990";
chassagnole1hyb.parameters(86).reaction="global";
chassagnole1hyb.parameters(86).fixed=0;
chassagnole1hyb.parameters(87).id="w40";
chassagnole1hyb.parameters(87).val="-0.175065364752510";
chassagnole1hyb.parameters(87).reaction="global";
chassagnole1hyb.parameters(87).fixed=0;
chassagnole1hyb.parameters(88).id="w41";
chassagnole1hyb.parameters(88).val="0.107033346851411";
chassagnole1hyb.parameters(88).reaction="global";
chassagnole1hyb.parameters(88).fixed=0;
chassagnole1hyb.parameters(89).id="w42";
chassagnole1hyb.parameters(89).val="0.541902411061234";
chassagnole1hyb.parameters(89).reaction="global";
chassagnole1hyb.parameters(89).fixed=0;
chassagnole1hyb.parameters(90).id="w43";
chassagnole1hyb.parameters(90).val="-0.464162836507866";
chassagnole1hyb.parameters(90).reaction="global";
chassagnole1hyb.parameters(90).fixed=0;
chassagnole1hyb.parameters(91).id="w44";
chassagnole1hyb.parameters(91).val="-0.417165956201290";
chassagnole1hyb.parameters(91).reaction="global";
chassagnole1hyb.parameters(91).fixed=0;
chassagnole1hyb.parameters(92).id="w45";
chassagnole1hyb.parameters(92).val="0.220068075387290";
chassagnole1hyb.parameters(92).reaction="global";
chassagnole1hyb.parameters(92).fixed=0;
chassagnole1hyb.parameters(93).id="w46";
chassagnole1hyb.parameters(93).val="-0.105369423327983";
chassagnole1hyb.parameters(93).reaction="global";
chassagnole1hyb.parameters(93).fixed=0;
chassagnole1hyb.parameters(94).id="w47";
chassagnole1hyb.parameters(94).val="-0.434953792589677";
chassagnole1hyb.parameters(94).reaction="global";
chassagnole1hyb.parameters(94).fixed=0;
chassagnole1hyb.parameters(95).id="w48";
chassagnole1hyb.parameters(95).val="-0.0208629214782977";
chassagnole1hyb.parameters(95).reaction="global";
chassagnole1hyb.parameters(96).fixed=0;
chassagnole1hyb.parameters(96).id="w49";
chassagnole1hyb.parameters(96).val="0.133868996733042";
chassagnole1hyb.parameters(96).reaction="global";
chassagnole1hyb.parameters(97).fixed=0;
chassagnole1hyb.parameters(97).id="w50";
chassagnole1hyb.parameters(97).val="-0.668935178541567";
chassagnole1hyb.parameters(97).reaction="global";
chassagnole1hyb.parameters(98).fixed=0;
chassagnole1hyb.parameters(98).id="w51";
chassagnole1hyb.parameters(98).val="-0.0956203111663912";
chassagnole1hyb.parameters(98).reaction="global";
chassagnole1hyb.parameters().fixed=0;
chassagnole1hyb.parameters(99).id="w52";
chassagnole1hyb.parameters(99).val="0.0917884701662601";
chassagnole1hyb.parameters(99).reaction="global";
chassagnole1hyb.parameters(99).fixed=0;
chassagnole1hyb.parameters(100).id="w53";
chassagnole1hyb.parameters(100).val="0.209597231095823";
chassagnole1hyb.parameters(100).reaction="global";
chassagnole1hyb.parameters(199).fixed=0;
chassagnole1hyb.parameters(101).id="w54";
chassagnole1hyb.parameters(101).val="0.877677245058359";
chassagnole1hyb.parameters(101).reaction="global";
chassagnole1hyb.parameters(101).fixed=0;
chassagnole1hyb.parameters(102).id="w55";
chassagnole1hyb.parameters(102).val="-0.507521885835287";
chassagnole1hyb.parameters(102).reaction="global";
chassagnole1hyb.parameters(102).fixed=0;
chassagnole1hyb.parameters(103).id="w56";
chassagnole1hyb.parameters(103).val="-0.00964337099368313";
chassagnole1hyb.parameters(103).reaction="global";
chassagnole1hyb.parameters(103).fixed=0;
chassagnole1hyb.parameters(104).id="w57";
chassagnole1hyb.parameters(104).val="0.537332321812603";
chassagnole1hyb.parameters(104).reaction="global";
chassagnole1hyb.parameters(104).fixed=0;
chassagnole1hyb.parameters(105).id="w58";
chassagnole1hyb.parameters(105).val="-0.239422219230637";
chassagnole1hyb.parameters(105).reaction="global";
chassagnole1hyb.parameters(105).fixed=0;
chassagnole1hyb.parameters(106).id="w59";
chassagnole1hyb.parameters(106).val="0.475219449627072";
chassagnole1hyb.parameters(106).reaction="global";
chassagnole1hyb.parameters(106).fixed=0;
chassagnole1hyb.parameters(107).id="w60";
chassagnole1hyb.parameters(107).val="-0.429723719515735";
chassagnole1hyb.parameters(107).reaction="global";
chassagnole1hyb.parameters(107).fixed=0;
chassagnole1hyb.parameters(108).id="w61";
chassagnole1hyb.parameters(108).val="0.0733342280502734";
chassagnole1hyb.parameters(108).reaction="global";
chassagnole1hyb.parameters(108).fixed=0;
chassagnole1hyb.parameters(109).id="w62";
chassagnole1hyb.parameters(109).val="-0.836351875697754";
chassagnole1hyb.parameters(109).reaction="global";
chassagnole1hyb.parameters(109).fixed=0;
chassagnole1hyb.parameters(110).id="w63";
chassagnole1hyb.parameters(110).val="0.359800724989661";
chassagnole1hyb.parameters(110).reaction="global";
chassagnole1hyb.parameters(110).fixed=0;
chassagnole1hyb.parameters(111).id="w64";
chassagnole1hyb.parameters(111).val="-0.220512963660970";
chassagnole1hyb.parameters(111).reaction="global";
chassagnole1hyb.parameters(111).fixed=0;
chassagnole1hyb.parameters(112).id="w65";
chassagnole1hyb.parameters(112).val="0.0482273677701782";
chassagnole1hyb.parameters(112).reaction="global";
chassagnole1hyb.parameters(112).fixed=0;
chassagnole1hyb.parameters(113).id="w66";
chassagnole1hyb.parameters(113).val="-0.230088064816317";
chassagnole1hyb.parameters(113).reaction="global";
chassagnole1hyb.parameters(113).fixed=0;
chassagnole1hyb.parameters(114).id="w67";
chassagnole1hyb.parameters(114).val="0.472388874532670";
chassagnole1hyb.parameters(114).reaction="global";
chassagnole1hyb.parameters(114).fixed=0;
chassagnole1hyb.parameters(115).id="w68";
chassagnole1hyb.parameters(115).val="0.223701763816115";
chassagnole1hyb.parameters(115).reaction="global";
chassagnole1hyb.parameters(115).fixed=0;
chassagnole1hyb.parameters(116).id="w69";
chassagnole1hyb.parameters(116).val="-0.00380036199544897";
chassagnole1hyb.parameters(116).reaction="global";
chassagnole1hyb.parameters(116).fixed=0;
chassagnole1hyb.parameters(117).id="w70";
chassagnole1hyb.parameters(117).val="-0.0561391774280978";
chassagnole1hyb.parameters(117).reaction="global";
chassagnole1hyb.parameters(117).fixed=0;
chassagnole1hyb.parameters(118).id="w71";
chassagnole1hyb.parameters(118).val="-0.141972706815560";
chassagnole1hyb.parameters(118).reaction="global";
chassagnole1hyb.parameters(118).fixed=0;
chassagnole1hyb.parameters(119).id="w72";
chassagnole1hyb.parameters(119).val="-0.257719200354805";
chassagnole1hyb.parameters(119).reaction="global";
chassagnole1hyb.parameters(119).fixed=0;
chassagnole1hyb.parameters(120).id="w73";
chassagnole1hyb.parameters(120).val="1.01989477085440";
chassagnole1hyb.parameters(120).reaction="global";
chassagnole1hyb.parameters(120).fixed=0;
chassagnole1hyb.parameters(121).id="w74";
chassagnole1hyb.parameters(121).val="-0.468845628748144";
chassagnole1hyb.parameters(121).reaction="global";
chassagnole1hyb.parameters(121).fixed=0;
chassagnole1hyb.parameters(122).id="w75";
chassagnole1hyb.parameters(122).val="-0.321714958362639";
chassagnole1hyb.parameters(122).reaction="global";
chassagnole1hyb.parameters(122).fixed=0;
chassagnole1hyb.parameters(123).id="w76";
chassagnole1hyb.parameters(123).val="0.395901165971801";
chassagnole1hyb.parameters(123).reaction="global";
chassagnole1hyb.parameters(123).fixed=0;
chassagnole1hyb.parameters(124).id="w77";
chassagnole1hyb.parameters(124).val="-0.641949422038249";
chassagnole1hyb.parameters(124).reaction="global";
chassagnole1hyb.parameters(124).fixed=0;
chassagnole1hyb.parameters(125).id="w78";
chassagnole1hyb.parameters(125).val="-1.19724197576484";
chassagnole1hyb.parameters(125).reaction="global";
chassagnole1hyb.parameters(125).fixed=0;
chassagnole1hyb.parameters(126).id="w79";
chassagnole1hyb.parameters(126).val="0.579586979117278";
chassagnole1hyb.parameters(126).reaction="global";
chassagnole1hyb.parameters(126).fixed=0;
chassagnole1hyb.parameters(127).id="w80";
chassagnole1hyb.parameters(127).val="0.245437909407391";
chassagnole1hyb.parameters(127).reaction="global";
chassagnole1hyb.parameters(127).fixed=0;
chassagnole1hyb.parameters(128).id="w81";
chassagnole1hyb.parameters(128).val="0.494921710836421";
chassagnole1hyb.parameters(128).reaction="global";
chassagnole1hyb.parameters(128).fixed=0;
chassagnole1hyb.parameters(129).id="w82";
chassagnole1hyb.parameters(129).val="-0.0611161242084645";
chassagnole1hyb.parameters(129).reaction="global";
chassagnole1hyb.parameters(129).fixed=0;
chassagnole1hyb.parameters(130).id="w83";
chassagnole1hyb.parameters(130).val="-0.426004699930690";
chassagnole1hyb.parameters(130).reaction="global";
chassagnole1hyb.parameters(130).fixed=0;
chassagnole1hyb.parameters(131).id="w84";
chassagnole1hyb.parameters(131).val="0.0715532308368150";
chassagnole1hyb.parameters(131).reaction="global";
chassagnole1hyb.parameters(131).fixed=0;
chassagnole1hyb.parameters(132).id="w85";
chassagnole1hyb.parameters(132).val="0.0517777687276735";
chassagnole1hyb.parameters(132).reaction="global";
chassagnole1hyb.parameters(132).fixed=0;
chassagnole1hyb.parameters(133).id="w86";
chassagnole1hyb.parameters(133).val="1.06604646232756";
chassagnole1hyb.parameters(133).reaction="global";
chassagnole1hyb.parameters(133).fixed=0;
chassagnole1hyb.parameters(134).id="w87";
chassagnole1hyb.parameters(134).val="0.976808436916876";
chassagnole1hyb.parameters(134).reaction="global";
chassagnole1hyb.parameters(134).fixed=0;
chassagnole1hyb.parameters(135).id="w88";
chassagnole1hyb.parameters(135).val="-0.327411457457336";
chassagnole1hyb.parameters(135).reaction="global";
chassagnole1hyb.parameters(135).fixed=0;
chassagnole1hyb.parameters(136).id="w89";
chassagnole1hyb.parameters(136).val="-0.114462408771623";
chassagnole1hyb.parameters(136).reaction="global";
chassagnole1hyb.parameters(136).fixed=0;
chassagnole1hyb.parameters(137).id="w90";
chassagnole1hyb.parameters(137).val="-0.193447305067786";
chassagnole1hyb.parameters(137).reaction="global";
chassagnole1hyb.parameters(137).fixed=0;
chassagnole1hyb.parameters(138).id="w91";
chassagnole1hyb.parameters(138).val="-0.137044514992983";
chassagnole1hyb.parameters(138).reaction="global";
chassagnole1hyb.parameters(138).fixed=0;
chassagnole1hyb.parameters(139).id="w92";
chassagnole1hyb.parameters(139).val="-0.140706609461602";
chassagnole1hyb.parameters(139).reaction="global";
chassagnole1hyb.parameters(139).fixed=0;
chassagnole1hyb.parameters(140).id="w93";
chassagnole1hyb.parameters(140).val="-0.146003608022458";
chassagnole1hyb.parameters(140).reaction="global";
chassagnole1hyb.parameters(140).fixed=0;
chassagnole1hyb.parameters(141).id="w94";
chassagnole1hyb.parameters(141).val="-0.660654613163837";
chassagnole1hyb.parameters(141).reaction="global";
chassagnole1hyb.parameters(141).fixed=0;
chassagnole1hyb.parameters(142).id="w95";
chassagnole1hyb.parameters(142).val="-0.453455550383969";
chassagnole1hyb.parameters(142).reaction="global";
chassagnole1hyb.parameters(142).fixed=0;
chassagnole1hyb.parameters(143).id="w96";
chassagnole1hyb.parameters(143).val="-0.373911031665627";
chassagnole1hyb.parameters(143).reaction="global";
chassagnole1hyb.parameters(143).fixed=0;
chassagnole1hyb.parameters(144).id="w97";
chassagnole1hyb.parameters(144).val="0.00666996553729431";
chassagnole1hyb.parameters(144).reaction="global";
chassagnole1hyb.parameters(144).fixed=0;
chassagnole1hyb.parameters(145).id="w98";
chassagnole1hyb.parameters(145).val="-0.0123840901904315";
chassagnole1hyb.parameters(145).reaction="global";
chassagnole1hyb.parameters(145).fixed=0;
chassagnole1hyb.parameters(146).id="w99";
chassagnole1hyb.parameters(146).val="-0.00532693130579152";
chassagnole1hyb.parameters(146).reaction="global";
chassagnole1hyb.parameters(146).fixed=0;
chassagnole1hyb.parameters(147).id="w100";
chassagnole1hyb.parameters(147).val="-0.00743268585420135";
chassagnole1hyb.parameters(147).reaction="global";
chassagnole1hyb.parameters(147).fixed=0;
chassagnole1hyb.parameters(148).id="w101";
chassagnole1hyb.parameters(148).val="0.0496069419382161";
chassagnole1hyb.parameters(148).reaction="global";
chassagnole1hyb.parameters(148).fixed=0;
chassagnole1hyb.parameters(149).id="w102";
chassagnole1hyb.parameters(149).val="0.400631622289339";
chassagnole1hyb.parameters(149).reaction="global";
chassagnole1hyb.parameters(149).fixed=0;
chassagnole1hyb.parameters(150).id="w103";
chassagnole1hyb.parameters(150).val="0.0531598929700400";
chassagnole1hyb.parameters(150).reaction="global";
chassagnole1hyb.parameters(150).fixed=0;
chassagnole1hyb.parameters(151).id="w104";
chassagnole1hyb.parameters(151).val="0.0591218199445469";
chassagnole1hyb.parameters(151).reaction="global";
chassagnole1hyb.parameters(151).fixed=0;
chassagnole1hyb.parameters(152).id="w105";
chassagnole1hyb.parameters(152).val="0.828800311193468";
chassagnole1hyb.parameters(152).reaction="global";
chassagnole1hyb.parameters(152).fixed=0;
chassagnole1hyb.parameters(153).id="w106";
chassagnole1hyb.parameters(153).val="-0.110783722493090";
chassagnole1hyb.parameters(153).reaction="global";
chassagnole1hyb.parameters(153).fixed=0;
chassagnole1hyb.parameters(154).id="w107";
chassagnole1hyb.parameters(154).val="-0.380020102881090";
chassagnole1hyb.parameters(154).reaction="global";
chassagnole1hyb.parameters(154).fixed=0;
chassagnole1hyb.parameters(155).id="w108";
chassagnole1hyb.parameters(155).val="-0.173732219981538";
chassagnole1hyb.parameters(155).reaction="global";
chassagnole1hyb.parameters(155).fixed=0;
chassagnole1hyb.parameters(156).id="w109";
chassagnole1hyb.parameters(156).val="0.313883835724000";
chassagnole1hyb.parameters(156).reaction="global";
chassagnole1hyb.parameters(156).fixed=0;
chassagnole1hyb.parameters(157).id="w110";
chassagnole1hyb.parameters(157).val="0.102926001305891";
chassagnole1hyb.parameters(157).reaction="global";
chassagnole1hyb.parameters(157).fixed=0;
chassagnole1hyb.parameters(158).id="w111";
chassagnole1hyb.parameters(158).val="-0.00405626890310281";
chassagnole1hyb.parameters(158).reaction="global";
chassagnole1hyb.parameters(158).fixed=0;
chassagnole1hyb.parameters(159).id="w112";
chassagnole1hyb.parameters(159).val="0.497268355411142";
chassagnole1hyb.parameters(159).reaction="global";
chassagnole1hyb.parameters(159).fixed=0;
chassagnole1hyb.parameters(160).id="w113";
chassagnole1hyb.parameters(160).val="-0.276029364317448";
chassagnole1hyb.parameters(160).reaction="global";
chassagnole1hyb.parameters(160).fixed=0;
chassagnole1hyb.parameters(161).id="w114";
chassagnole1hyb.parameters(161).val="-0.130395294524407";
chassagnole1hyb.parameters(161).reaction="global";
chassagnole1hyb.parameters(161).fixed=0;
chassagnole1hyb.parameters(162).id="w115";
chassagnole1hyb.parameters(162).val="0.308433997963238";
chassagnole1hyb.parameters(162).reaction="global";
chassagnole1hyb.parameters(162).fixed=0;
chassagnole1hyb.parameters(163).id="w116";
chassagnole1hyb.parameters(163).val="0.00936251159888365";
chassagnole1hyb.parameters(163).reaction="global";
chassagnole1hyb.parameters(163).fixed=0;
chassagnole1hyb.parameters(164).id="w117";
chassagnole1hyb.parameters(164).val="0.273207052601406";
chassagnole1hyb.parameters(164).reaction="global";
chassagnole1hyb.parameters(164).fixed=0;
chassagnole1hyb.parameters(165).id="w118";
chassagnole1hyb.parameters(165).val="0.370698286581200";
chassagnole1hyb.parameters(165).reaction="global";
chassagnole1hyb.parameters(165).fixed=0;
chassagnole1hyb.parameters(166).id="w119";
chassagnole1hyb.parameters(166).val="0.119018375795410";
chassagnole1hyb.parameters(166).reaction="global";
chassagnole1hyb.parameters(166).fixed=0;
chassagnole1hyb.parameters(167).id="w120";
chassagnole1hyb.parameters(167).val="0.0824876578531715";
chassagnole1hyb.parameters(167).reaction="global";
chassagnole1hyb.parameters(167).fixed=0;
chassagnole1hyb.parameters(168).id="w121";
chassagnole1hyb.parameters(168).val="-0.0351845109103107";
chassagnole1hyb.parameters(168).reaction="global";
chassagnole1hyb.parameters(168).fixed=0;
chassagnole1hyb.parameters(169).id="w122";
chassagnole1hyb.parameters(169).val="0.338836161904877";
chassagnole1hyb.parameters(169).reaction="global";
chassagnole1hyb.parameters(169).fixed=0;
chassagnole1hyb.parameters(170).id="w123";
chassagnole1hyb.parameters(170).val="1.92471437624054";
chassagnole1hyb.parameters(170).reaction="global";
chassagnole1hyb.parameters(170).fixed=0;
chassagnole1hyb.parameters(171).id="w124";
chassagnole1hyb.parameters(171).val="0.417204425913406";
chassagnole1hyb.parameters(171).reaction="global";
chassagnole1hyb.parameters(171).fixed=0;
chassagnole1hyb.parameters(172).id="w125";
chassagnole1hyb.parameters(172).val="-0.0871091136378057";
chassagnole1hyb.parameters(172).reaction="global";
chassagnole1hyb.parameters(172).fixed=0;
chassagnole1hyb.parameters(173).id="w126";
chassagnole1hyb.parameters(173).val="0.586837627596113";
chassagnole1hyb.parameters(173).reaction="global";
chassagnole1hyb.parameters(173).fixed=0;
chassagnole1hyb.parameters(174).id="w127";
chassagnole1hyb.parameters(174).val="0.147797688957577";
chassagnole1hyb.parameters(174).reaction="global";
chassagnole1hyb.parameters(174).fixed=0;
chassagnole1hyb.parameters(175).id="w128";
chassagnole1hyb.parameters(175).val="-0.145883651170036";
chassagnole1hyb.parameters(175).reaction="global";
chassagnole1hyb.parameters(175).fixed=0;
chassagnole1hyb.parameters(176).id="w129";
chassagnole1hyb.parameters(176).val="0.113521643721193";
chassagnole1hyb.parameters(176).reaction="global";
chassagnole1hyb.parameters(176).fixed=0;
chassagnole1hyb.parameters(177).id="w130";
chassagnole1hyb.parameters(177).val="0.133832027370581";
chassagnole1hyb.parameters(177).reaction="global";
chassagnole1hyb.parameters(177).fixed=0;
chassagnole1hyb.parameters(178).id="w131";
chassagnole1hyb.parameters(178).val="0.148476820101442";
chassagnole1hyb.parameters(178).reaction="global";
chassagnole1hyb.parameters(178).fixed=0;
chassagnole1hyb.parameters(179).id="w132";
chassagnole1hyb.parameters(179).val="-0.221102475641946";
chassagnole1hyb.parameters(179).reaction="global";
chassagnole1hyb.parameters(179).fixed=0;
chassagnole1hyb.parameters(180).id="vakr";
chassagnole1hyb.parameters(180).val="0";
chassagnole1hyb.parameters(180).fixed=0;
chassagnole1hyb.parameters(180).reaction="global";
chassagnole1hyb.parameters(181).id="vasdr";
chassagnole1hyb.parameters(181).val="0";
chassagnole1hyb.parameters(181).fixed=0;
chassagnole1hyb.parameters(181).reaction="global";
chassagnole1hyb.parameters(182).id="vatpaser";
chassagnole1hyb.parameters(182).val="0";
chassagnole1hyb.parameters(182).fixed=0;
chassagnole1hyb.parameters(182).reaction="global";
chassagnole1hyb.parameters(183).id="vhdhr";
chassagnole1hyb.parameters(183).val="0";
chassagnole1hyb.parameters(183).fixed=0;
chassagnole1hyb.parameters(183).reaction="global";
chassagnole1hyb.parameters(184).id="vhkr";
chassagnole1hyb.parameters(184).val="0";
chassagnole1hyb.parameters(184).fixed=0;
chassagnole1hyb.parameters(184).reaction="global";
chassagnole1hyb.parameters(185).id="vnadph_endor";
chassagnole1hyb.parameters(185).val="0";
chassagnole1hyb.parameters(185).fixed=0;
chassagnole1hyb.parameters(185).reaction="global";
chassagnole1hyb.parameters(186).id="vtsyr";
chassagnole1hyb.parameters(186).val="0";
chassagnole1hyb.parameters(186).fixed=0;
chassagnole1hyb.parameters(186).reaction="global";



% Assignment rules
chassagnole1hyb.nruleAss=7;
chassagnole1hyb.ruleAss(1).id="vakr";
chassagnole1hyb.ruleAss(1).val="w91* tanh(w61*tanh(w1*adp/5 + w6*asa/0.1+ w11*asp/3 + w16*aspp/0.01+ w21*atp/15 + w26*hs/0.3 + w31*hsp/0.15+ w36*nadp/2 + w41*nadph/3 + w46*phos/5 + w51*thr/3 + w56) + w66*tanh(w2*adp/5 + w7*asa/0.1+ w12*asp/3 + w17*aspp/0.01+ w22*atp/15 + w27*hs/0.3 + w32*hsp/0.15+ w37*nadp/2 + w42*nadph/3 + w47*phos/5 + w52*thr/3 + w57)+ w71*tanh(w3*adp/5 + w8*asa/0.1+ w13*asp/3 + w18*aspp/0.01+ w23*atp/15 + w28*hs/0.3 + w33*hsp/0.15+ w38*nadp/2 + w43*nadph/3 + w48*phos/5 + w53*thr/3 + w58) + w76*tanh(w4*adp/5 + w9*asa/0.1+ w14*asp/3 + w19*aspp/0.01+ w24*atp/15 + w29*hs/0.3 + w34*hsp/0.15+ w39*nadp/2 + w44*nadph/3 + w49*phos/5 + w54*thr/3 + w59)+ w81*tanh(w5*adp/5 + w10*asa/0.1+ w15*asp/3 + w20*aspp/0.01+ w25*atp/15 + w30*hs/0.3 + w35*hsp/0.15+ w40*nadp/2 + w45*nadph/3 + w50*phos/5 + w55*thr/3 + w60) + w86) +w98* tanh(w62*tanh(w1*adp/5 + w6*asa/0.1+ w11*asp/3 + w16*aspp/0.01+ w21*atp/15 + w26*hs/0.3 + w31*hsp/0.15+ w36*nadp/2 + w41*nadph/3 + w46*phos/5 + w51*thr/3 + w56) + w67*tanh(w2*adp/5 + w7*asa/0.1+ w12*asp/3 + w17*aspp/0.01+ w22*atp/15 + w27*hs/0.3 + w32*hsp/0.15+ w37*nadp/2 + w42*nadph/3 + w47*phos/5 + w52*thr/3 + w57)+ w72*tanh(w3*adp/5 + w8*asa/0.1+ w13*asp/3 + w18*aspp/0.01+ w23*atp/15 + w28*hs/0.3 + w33*hsp/0.15+ w38*nadp/2 + w43*nadph/3 + w48*phos/5 + w53*thr/3 + w58) + w77*tanh(w4*adp/5 + w9*asa/0.1+ w14*asp/3 + w19*aspp/0.01+ w24*atp/15 + w29*hs/0.3 + w34*hsp/0.15+ w39*nadp/2 + w44*nadph/3 + w49*phos/5 + w54*thr/3 + w59)+ w82*tanh(w5*adp/5 + w10*asa/0.1+ w15*asp/3 + w20*aspp/0.01+ w25*atp/15 + w30*hs/0.3 + w35*hsp/0.15+ w40*nadp/2 + w45*nadph/3 + w50*phos/5 + w55*thr/3 + w60) + w87) +w105* tanh(w63*tanh(w1*adp/5 + w6*asa/0.1+ w11*asp/3 + w16*aspp/0.01+ w21*atp/15 + w26*hs/0.3 + w31*hsp/0.15+ w36*nadp/2 + w41*nadph/3 + w46*phos/5 + w51*thr/3 + w56) + w68*tanh(w2*adp/5 + w7*asa/0.1+ w12*asp/3 + w17*aspp/0.01+ w22*atp/15 + w27*hs/0.3 + w32*hsp/0.15+ w37*nadp/2 + w42*nadph/3 + w47*phos/5 + w52*thr/3 + w57)+ w73*tanh(w3*adp/5 + w8*asa/0.1+ w13*asp/3 + w18*aspp/0.01+ w23*atp/15 + w28*hs/0.3 + w33*hsp/0.15+ w38*nadp/2 + w43*nadph/3 + w48*phos/5 + w53*thr/3 + w58) + w78*tanh(w4*adp/5 + w9*asa/0.1+ w14*asp/3 + w19*aspp/0.01+ w24*atp/15 + w29*hs/0.3 + w34*hsp/0.15+ w39*nadp/2 + w44*nadph/3 + w49*phos/5 + w54*thr/3 + w59)+ w83*tanh(w5*adp/5 + w10*asa/0.1+ w15*asp/3 + w20*aspp/0.01+ w25*atp/15 + w30*hs/0.3 + w35*hsp/0.15+ w40*nadp/2 + w45*nadph/3 + w50*phos/5 + w55*thr/3 + w60) + w88) +w112* tanh(w64*tanh(w1*adp/5 + w6*asa/0.1+ w11*asp/3 + w16*aspp/0.01+ w21*atp/15 + w26*hs/0.3 + w31*hsp/0.15+ w36*nadp/2 + w41*nadph/3 + w46*phos/5 + w51*thr/3 + w56) + w69*tanh(w2*adp/5 + w7*asa/0.1+ w12*asp/3 + w17*aspp/0.01+ w22*atp/15 + w27*hs/0.3 + w32*hsp/0.15+ w37*nadp/2 + w42*nadph/3 + w47*phos/5 + w52*thr/3 + w57)+ w74*tanh(w3*adp/5 + w8*asa/0.1+ w13*asp/3 + w18*aspp/0.01+ w23*atp/15 + w28*hs/0.3 + w33*hsp/0.15+ w38*nadp/2 + w43*nadph/3 + w48*phos/5 + w53*thr/3 + w58) + w79*tanh(w4*adp/5 + w9*asa/0.1+ w14*asp/3 + w19*aspp/0.01+ w24*atp/15 + w29*hs/0.3 + w34*hsp/0.15+ w39*nadp/2 + w44*nadph/3 + w49*phos/5 + w54*thr/3 + w59)+ w84*tanh(w5*adp/5 + w10*asa/0.1+ w15*asp/3 + w20*aspp/0.01+ w25*atp/15 + w30*hs/0.3 + w35*hsp/0.15+ w40*nadp/2 + w45*nadph/3 + w50*phos/5 + w55*thr/3 + w60) + w89) +w119* tanh(w65*tanh(w1*adp/5 + w6*asa/0.1+ w11*asp/3 + w16*aspp/0.01+ w21*atp/15 + w26*hs/0.3 + w31*hsp/0.15+ w36*nadp/2 + w41*nadph/3 + w46*phos/5 + w51*thr/3 + w56) + w70*tanh(w2*adp/5 + w7*asa/0.1+ w12*asp/3 + w17*aspp/0.01+ w22*atp/15 + w27*hs/0.3 + w32*hsp/0.15+ w37*nadp/2 + w42*nadph/3 + w47*phos/5 + w52*thr/3 + w57)+ w75*tanh(w3*adp/5 + w8*asa/0.1+ w13*asp/3 + w18*aspp/0.01+ w23*atp/15 + w28*hs/0.3 + w33*hsp/0.15+ w38*nadp/2 + w43*nadph/3 + w48*phos/5 + w53*thr/3 + w58) + w80*tanh(w4*adp/5 + w9*asa/0.1+ w14*asp/3 + w19*aspp/0.01+ w24*atp/15 + w29*hs/0.3 + w34*hsp/0.15+ w39*nadp/2 + w44*nadph/3 + w49*phos/5 + w54*thr/3 + w59) + w85*tanh(w5*adp/5 + w10*asa/0.1+ w15*asp/3 + w20*aspp/0.01+ w25*atp/15 + w30*hs/0.3 + w35*hsp/0.15+ w40*nadp/2 + w45*nadph/3 + w50*phos/5 + w55*thr/3 + w60) + w90) +w126";
chassagnole1hyb.ruleAss(2).id="vasdr";
chassagnole1hyb.ruleAss(2).val="w92* tanh(w61*tanh(w1*adp/5 + w6*asa/0.1+ w11*asp/3 + w16*aspp/0.01+ w21*atp/15 + w26*hs/0.3 + w31*hsp/0.15+ w36*nadp/2 + w41*nadph/3 + w46*phos/5 + w51*thr/3 + w56) + w66*tanh(w2*adp/5 + w7*asa/0.1+ w12*asp/3 + w17*aspp/0.01+ w22*atp/15 + w27*hs/0.3 + w32*hsp/0.15+ w37*nadp/2 + w42*nadph/3 + w47*phos/5 + w52*thr/3 + w57)+ w71*tanh(w3*adp/5 + w8*asa/0.1+ w13*asp/3 + w18*aspp/0.01+ w23*atp/15 + w28*hs/0.3 + w33*hsp/0.15+ w38*nadp/2 + w43*nadph/3 + w48*phos/5 + w53*thr/3 + w58) + w76*tanh(w4*adp/5 + w9*asa/0.1+ w14*asp/3 + w19*aspp/0.01+ w24*atp/15 + w29*hs/0.3 + w34*hsp/0.15+ w39*nadp/2 + w44*nadph/3 + w49*phos/5 + w54*thr/3 + w59)+ w81*tanh(w5*adp/5 + w10*asa/0.1+ w15*asp/3 + w20*aspp/0.01+ w25*atp/15 + w30*hs/0.3 + w35*hsp/0.15+ w40*nadp/2 + w45*nadph/3 + w50*phos/5 + w55*thr/3 + w60) + w86) +w99* tanh(w62*tanh(w1*adp/5 + w6*asa/0.1+ w11*asp/3 + w16*aspp/0.01+ w21*atp/15 + w26*hs/0.3 + w31*hsp/0.15+ w36*nadp/2 + w41*nadph/3 + w46*phos/5 + w51*thr/3 + w56) + w67*tanh(w2*adp/5 + w7*asa/0.1+ w12*asp/3 + w17*aspp/0.01+ w22*atp/15 + w27*hs/0.3 + w32*hsp/0.15+ w37*nadp/2 + w42*nadph/3 + w47*phos/5 + w52*thr/3 + w57)+ w72*tanh(w3*adp/5 + w8*asa/0.1+ w13*asp/3 + w18*aspp/0.01+ w23*atp/15 + w28*hs/0.3 + w33*hsp/0.15+ w38*nadp/2 + w43*nadph/3 + w48*phos/5 + w53*thr/3 + w58) + w77*tanh(w4*adp/5 + w9*asa/0.1+ w14*asp/3 + w19*aspp/0.01+ w24*atp/15 + w29*hs/0.3 + w34*hsp/0.15+ w39*nadp/2 + w44*nadph/3 + w49*phos/5 + w54*thr/3 + w59)+ w82*tanh(w5*adp/5 + w10*asa/0.1+ w15*asp/3 + w20*aspp/0.01+ w25*atp/15 + w30*hs/0.3 + w35*hsp/0.15+ w40*nadp/2 + w45*nadph/3 + w50*phos/5 + w55*thr/3 + w60) + w87) +w106* tanh(w63*tanh(w1*adp/5 + w6*asa/0.1+ w11*asp/3 + w16*aspp/0.01+ w21*atp/15 + w26*hs/0.3 + w31*hsp/0.15+ w36*nadp/2 + w41*nadph/3 + w46*phos/5 + w51*thr/3 + w56) + w68*tanh(w2*adp/5 + w7*asa/0.1+ w12*asp/3 + w17*aspp/0.01+ w22*atp/15 + w27*hs/0.3 + w32*hsp/0.15+ w37*nadp/2 + w42*nadph/3 + w47*phos/5 + w52*thr/3 + w57)+ w73*tanh(w3*adp/5 + w8*asa/0.1+ w13*asp/3 + w18*aspp/0.01+ w23*atp/15 + w28*hs/0.3 + w33*hsp/0.15+ w38*nadp/2 + w43*nadph/3 + w48*phos/5 + w53*thr/3 + w58) + w78*tanh(w4*adp/5 + w9*asa/0.1+ w14*asp/3 + w19*aspp/0.01+ w24*atp/15 + w29*hs/0.3 + w34*hsp/0.15+ w39*nadp/2 + w44*nadph/3 + w49*phos/5 + w54*thr/3 + w59)+ w83*tanh(w5*adp/5 + w10*asa/0.1+ w15*asp/3 + w20*aspp/0.01+ w25*atp/15 + w30*hs/0.3 + w35*hsp/0.15+ w40*nadp/2 + w45*nadph/3 + w50*phos/5 + w55*thr/3 + w60) + w88) +w113* tanh(w64*tanh(w1*adp/5 + w6*asa/0.1+ w11*asp/3 + w16*aspp/0.01+ w21*atp/15 + w26*hs/0.3 + w31*hsp/0.15+ w36*nadp/2 + w41*nadph/3 + w46*phos/5 + w51*thr/3 + w56) + w69*tanh(w2*adp/5 + w7*asa/0.1+ w12*asp/3 + w17*aspp/0.01+ w22*atp/15 + w27*hs/0.3 + w32*hsp/0.15+ w37*nadp/2 + w42*nadph/3 + w47*phos/5 + w52*thr/3 + w57)+ w74*tanh(w3*adp/5 + w8*asa/0.1+ w13*asp/3 + w18*aspp/0.01+ w23*atp/15 + w28*hs/0.3 + w33*hsp/0.15+ w38*nadp/2 + w43*nadph/3 + w48*phos/5 + w53*thr/3 + w58) + w79*tanh(w4*adp/5 + w9*asa/0.1+ w14*asp/3 + w19*aspp/0.01+ w24*atp/15 + w29*hs/0.3 + w34*hsp/0.15+ w39*nadp/2 + w44*nadph/3 + w49*phos/5 + w54*thr/3 + w59)+ w84*tanh(w5*adp/5 + w10*asa/0.1+ w15*asp/3 + w20*aspp/0.01+ w25*atp/15 + w30*hs/0.3 + w35*hsp/0.15+ w40*nadp/2 + w45*nadph/3 + w50*phos/5 + w55*thr/3 + w60) + w89) +w120* tanh(w65*tanh(w1*adp/5 + w6*asa/0.1+ w11*asp/3 + w16*aspp/0.01+ w21*atp/15 + w26*hs/0.3 + w31*hsp/0.15+ w36*nadp/2 + w41*nadph/3 + w46*phos/5 + w51*thr/3 + w56) + w70*tanh(w2*adp/5 + w7*asa/0.1+ w12*asp/3 + w17*aspp/0.01+ w22*atp/15 + w27*hs/0.3 + w32*hsp/0.15+ w37*nadp/2 + w42*nadph/3 + w47*phos/5 + w52*thr/3 + w57)+ w75*tanh(w3*adp/5 + w8*asa/0.1+ w13*asp/3 + w18*aspp/0.01+ w23*atp/15 + w28*hs/0.3 + w33*hsp/0.15+ w38*nadp/2 + w43*nadph/3 + w48*phos/5 + w53*thr/3 + w58) + w80*tanh(w4*adp/5 + w9*asa/0.1+ w14*asp/3 + w19*aspp/0.01+ w24*atp/15 + w29*hs/0.3 + w34*hsp/0.15+ w39*nadp/2 + w44*nadph/3 + w49*phos/5 + w54*thr/3 + w59) + w85*tanh(w5*adp/5 + w10*asa/0.1+ w15*asp/3 + w20*aspp/0.01+ w25*atp/15 + w30*hs/0.3 + w35*hsp/0.15+ w40*nadp/2 + w45*nadph/3 + w50*phos/5 + w55*thr/3 + w60) + w90) +w127";
chassagnole1hyb.ruleAss(3).id="vatpaser";
chassagnole1hyb.ruleAss(3).val="w93* tanh(w61*tanh(w1*adp/5 + w6*asa/0.1+ w11*asp/3 + w16*aspp/0.01+ w21*atp/15 + w26*hs/0.3 + w31*hsp/0.15+ w36*nadp/2 + w41*nadph/3 + w46*phos/5 + w51*thr/3 + w56) + w66*tanh(w2*adp/5 + w7*asa/0.1+ w12*asp/3 + w17*aspp/0.01+ w22*atp/15 + w27*hs/0.3 + w32*hsp/0.15+ w37*nadp/2 + w42*nadph/3 + w47*phos/5 + w52*thr/3 + w57)+ w71*tanh(w3*adp/5 + w8*asa/0.1+ w13*asp/3 + w18*aspp/0.01+ w23*atp/15 + w28*hs/0.3 + w33*hsp/0.15+ w38*nadp/2 + w43*nadph/3 + w48*phos/5 + w53*thr/3 + w58) + w76*tanh(w4*adp/5 + w9*asa/0.1+ w14*asp/3 + w19*aspp/0.01+ w24*atp/15 + w29*hs/0.3 + w34*hsp/0.15+ w39*nadp/2 + w44*nadph/3 + w49*phos/5 + w54*thr/3 + w59)+ w81*tanh(w5*adp/5 + w10*asa/0.1+ w15*asp/3 + w20*aspp/0.01+ w25*atp/15 + w30*hs/0.3 + w35*hsp/0.15+ w40*nadp/2 + w45*nadph/3 + w50*phos/5 + w55*thr/3 + w60) + w86) +w100* tanh(w62*tanh(w1*adp/5 + w6*asa/0.1+ w11*asp/3 + w16*aspp/0.01+ w21*atp/15 + w26*hs/0.3 + w31*hsp/0.15+ w36*nadp/2 + w41*nadph/3 + w46*phos/5 + w51*thr/3 + w56) + w67*tanh(w2*adp/5 + w7*asa/0.1+ w12*asp/3 + w17*aspp/0.01+ w22*atp/15 + w27*hs/0.3 + w32*hsp/0.15+ w37*nadp/2 + w42*nadph/3 + w47*phos/5 + w52*thr/3 + w57)+ w72*tanh(w3*adp/5 + w8*asa/0.1+ w13*asp/3 + w18*aspp/0.01+ w23*atp/15 + w28*hs/0.3 + w33*hsp/0.15+ w38*nadp/2 + w43*nadph/3 + w48*phos/5 + w53*thr/3 + w58) + w77*tanh(w4*adp/5 + w9*asa/0.1+ w14*asp/3 + w19*aspp/0.01+ w24*atp/15 + w29*hs/0.3 + w34*hsp/0.15+ w39*nadp/2 + w44*nadph/3 + w49*phos/5 + w54*thr/3 + w59)+ w82*tanh(w5*adp/5 + w10*asa/0.1+ w15*asp/3 + w20*aspp/0.01+ w25*atp/15 + w30*hs/0.3 + w35*hsp/0.15+ w40*nadp/2 + w45*nadph/3 + w50*phos/5 + w55*thr/3 + w60) + w87) +w107* tanh(w63*tanh(w1*adp/5 + w6*asa/0.1+ w11*asp/3 + w16*aspp/0.01+ w21*atp/15 + w26*hs/0.3 + w31*hsp/0.15+ w36*nadp/2 + w41*nadph/3 + w46*phos/5 + w51*thr/3 + w56) + w68*tanh(w2*adp/5 + w7*asa/0.1+ w12*asp/3 + w17*aspp/0.01+ w22*atp/15 + w27*hs/0.3 + w32*hsp/0.15+ w37*nadp/2 + w42*nadph/3 + w47*phos/5 + w52*thr/3 + w57)+ w73*tanh(w3*adp/5 + w8*asa/0.1+ w13*asp/3 + w18*aspp/0.01+ w23*atp/15 + w28*hs/0.3 + w33*hsp/0.15+ w38*nadp/2 + w43*nadph/3 + w48*phos/5 + w53*thr/3 + w58) + w78*tanh(w4*adp/5 + w9*asa/0.1+ w14*asp/3 + w19*aspp/0.01+ w24*atp/15 + w29*hs/0.3 + w34*hsp/0.15+ w39*nadp/2 + w44*nadph/3 + w49*phos/5 + w54*thr/3 + w59)+ w83*tanh(w5*adp/5 + w10*asa/0.1+ w15*asp/3 + w20*aspp/0.01+ w25*atp/15 + w30*hs/0.3 + w35*hsp/0.15+ w40*nadp/2 + w45*nadph/3 + w50*phos/5 + w55*thr/3 + w60) + w88) +w114* tanh(w64*tanh(w1*adp/5 + w6*asa/0.1+ w11*asp/3 + w16*aspp/0.01+ w21*atp/15 + w26*hs/0.3 + w31*hsp/0.15+ w36*nadp/2 + w41*nadph/3 + w46*phos/5 + w51*thr/3 + w56) + w69*tanh(w2*adp/5 + w7*asa/0.1+ w12*asp/3 + w17*aspp/0.01+ w22*atp/15 + w27*hs/0.3 + w32*hsp/0.15+ w37*nadp/2 + w42*nadph/3 + w47*phos/5 + w52*thr/3 + w57)+ w74*tanh(w3*adp/5 + w8*asa/0.1+ w13*asp/3 + w18*aspp/0.01+ w23*atp/15 + w28*hs/0.3 + w33*hsp/0.15+ w38*nadp/2 + w43*nadph/3 + w48*phos/5 + w53*thr/3 + w58) + w79*tanh(w4*adp/5 + w9*asa/0.1+ w14*asp/3 + w19*aspp/0.01+ w24*atp/15 + w29*hs/0.3 + w34*hsp/0.15+ w39*nadp/2 + w44*nadph/3 + w49*phos/5 + w54*thr/3 + w59)+ w84*tanh(w5*adp/5 + w10*asa/0.1+ w15*asp/3 + w20*aspp/0.01+ w25*atp/15 + w30*hs/0.3 + w35*hsp/0.15+ w40*nadp/2 + w45*nadph/3 + w50*phos/5 + w55*thr/3 + w60) + w89) +w121* tanh(w65*tanh(w1*adp/5 + w6*asa/0.1+ w11*asp/3 + w16*aspp/0.01+ w21*atp/15 + w26*hs/0.3 + w31*hsp/0.15+ w36*nadp/2 + w41*nadph/3 + w46*phos/5 + w51*thr/3 + w56) + w70*tanh(w2*adp/5 + w7*asa/0.1+ w12*asp/3 + w17*aspp/0.01+ w22*atp/15 + w27*hs/0.3 + w32*hsp/0.15+ w37*nadp/2 + w42*nadph/3 + w47*phos/5 + w52*thr/3 + w57)+ w75*tanh(w3*adp/5 + w8*asa/0.1+ w13*asp/3 + w18*aspp/0.01+ w23*atp/15 + w28*hs/0.3 + w33*hsp/0.15+ w38*nadp/2 + w43*nadph/3 + w48*phos/5 + w53*thr/3 + w58) + w80*tanh(w4*adp/5 + w9*asa/0.1+ w14*asp/3 + w19*aspp/0.01+ w24*atp/15 + w29*hs/0.3 + w34*hsp/0.15+ w39*nadp/2 + w44*nadph/3 + w49*phos/5 + w54*thr/3 + w59) + w85*tanh(w5*adp/5 + w10*asa/0.1+ w15*asp/3 + w20*aspp/0.01+ w25*atp/15 + w30*hs/0.3 + w35*hsp/0.15+ w40*nadp/2 + w45*nadph/3 + w50*phos/5 + w55*thr/3 + w60) + w90) +w128";
chassagnole1hyb.ruleAss(4).id="vhdhr";
chassagnole1hyb.ruleAss(4).val="w94* tanh(w61*tanh(w1*adp/5 + w6*asa/0.1+ w11*asp/3 + w16*aspp/0.01+ w21*atp/15 + w26*hs/0.3 + w31*hsp/0.15+ w36*nadp/2 + w41*nadph/3 + w46*phos/5 + w51*thr/3 + w56) + w66*tanh(w2*adp/5 + w7*asa/0.1+ w12*asp/3 + w17*aspp/0.01+ w22*atp/15 + w27*hs/0.3 + w32*hsp/0.15+ w37*nadp/2 + w42*nadph/3 + w47*phos/5 + w52*thr/3 + w57)+ w71*tanh(w3*adp/5 + w8*asa/0.1+ w13*asp/3 + w18*aspp/0.01+ w23*atp/15 + w28*hs/0.3 + w33*hsp/0.15+ w38*nadp/2 + w43*nadph/3 + w48*phos/5 + w53*thr/3 + w58) + w76*tanh(w4*adp/5 + w9*asa/0.1+ w14*asp/3 + w19*aspp/0.01+ w24*atp/15 + w29*hs/0.3 + w34*hsp/0.15+ w39*nadp/2 + w44*nadph/3 + w49*phos/5 + w54*thr/3 + w59)+ w81*tanh(w5*adp/5 + w10*asa/0.1+ w15*asp/3 + w20*aspp/0.01+ w25*atp/15 + w30*hs/0.3 + w35*hsp/0.15+ w40*nadp/2 + w45*nadph/3 + w50*phos/5 + w55*thr/3 + w60) + w86) +w101* tanh(w62*tanh(w1*adp/5 + w6*asa/0.1+ w11*asp/3 + w16*aspp/0.01+ w21*atp/15 + w26*hs/0.3 + w31*hsp/0.15+ w36*nadp/2 + w41*nadph/3 + w46*phos/5 + w51*thr/3 + w56) + w67*tanh(w2*adp/5 + w7*asa/0.1+ w12*asp/3 + w17*aspp/0.01+ w22*atp/15 + w27*hs/0.3 + w32*hsp/0.15+ w37*nadp/2 + w42*nadph/3 + w47*phos/5 + w52*thr/3 + w57)+ w72*tanh(w3*adp/5 + w8*asa/0.1+ w13*asp/3 + w18*aspp/0.01+ w23*atp/15 + w28*hs/0.3 + w33*hsp/0.15+ w38*nadp/2 + w43*nadph/3 + w48*phos/5 + w53*thr/3 + w58) + w77*tanh(w4*adp/5 + w9*asa/0.1+ w14*asp/3 + w19*aspp/0.01+ w24*atp/15 + w29*hs/0.3 + w34*hsp/0.15+ w39*nadp/2 + w44*nadph/3 + w49*phos/5 + w54*thr/3 + w59)+ w82*tanh(w5*adp/5 + w10*asa/0.1+ w15*asp/3 + w20*aspp/0.01+ w25*atp/15 + w30*hs/0.3 + w35*hsp/0.15+ w40*nadp/2 + w45*nadph/3 + w50*phos/5 + w55*thr/3 + w60) + w87) +w108* tanh(w63*tanh(w1*adp/5 + w6*asa/0.1+ w11*asp/3 + w16*aspp/0.01+ w21*atp/15 + w26*hs/0.3 + w31*hsp/0.15+ w36*nadp/2 + w41*nadph/3 + w46*phos/5 + w51*thr/3 + w56) + w68*tanh(w2*adp/5 + w7*asa/0.1+ w12*asp/3 + w17*aspp/0.01+ w22*atp/15 + w27*hs/0.3 + w32*hsp/0.15+ w37*nadp/2 + w42*nadph/3 + w47*phos/5 + w52*thr/3 + w57)+ w73*tanh(w3*adp/5 + w8*asa/0.1+ w13*asp/3 + w18*aspp/0.01+ w23*atp/15 + w28*hs/0.3 + w33*hsp/0.15+ w38*nadp/2 + w43*nadph/3 + w48*phos/5 + w53*thr/3 + w58) + w78*tanh(w4*adp/5 + w9*asa/0.1+ w14*asp/3 + w19*aspp/0.01+ w24*atp/15 + w29*hs/0.3 + w34*hsp/0.15+ w39*nadp/2 + w44*nadph/3 + w49*phos/5 + w54*thr/3 + w59)+ w83*tanh(w5*adp/5 + w10*asa/0.1+ w15*asp/3 + w20*aspp/0.01+ w25*atp/15 + w30*hs/0.3 + w35*hsp/0.15+ w40*nadp/2 + w45*nadph/3 + w50*phos/5 + w55*thr/3 + w60) + w88) +w115* tanh(w64*tanh(w1*adp/5 + w6*asa/0.1+ w11*asp/3 + w16*aspp/0.01+ w21*atp/15 + w26*hs/0.3 + w31*hsp/0.15+ w36*nadp/2 + w41*nadph/3 + w46*phos/5 + w51*thr/3 + w56) + w69*tanh(w2*adp/5 + w7*asa/0.1+ w12*asp/3 + w17*aspp/0.01+ w22*atp/15 + w27*hs/0.3 + w32*hsp/0.15+ w37*nadp/2 + w42*nadph/3 + w47*phos/5 + w52*thr/3 + w57)+ w74*tanh(w3*adp/5 + w8*asa/0.1+ w13*asp/3 + w18*aspp/0.01+ w23*atp/15 + w28*hs/0.3 + w33*hsp/0.15+ w38*nadp/2 + w43*nadph/3 + w48*phos/5 + w53*thr/3 + w58) + w79*tanh(w4*adp/5 + w9*asa/0.1+ w14*asp/3 + w19*aspp/0.01+ w24*atp/15 + w29*hs/0.3 + w34*hsp/0.15+ w39*nadp/2 + w44*nadph/3 + w49*phos/5 + w54*thr/3 + w59)+ w84*tanh(w5*adp/5 + w10*asa/0.1+ w15*asp/3 + w20*aspp/0.01+ w25*atp/15 + w30*hs/0.3 + w35*hsp/0.15+ w40*nadp/2 + w45*nadph/3 + w50*phos/5 + w55*thr/3 + w60) + w89) +w122* tanh(w65*tanh(w1*adp/5 + w6*asa/0.1+ w11*asp/3 + w16*aspp/0.01+ w21*atp/15 + w26*hs/0.3 + w31*hsp/0.15+ w36*nadp/2 + w41*nadph/3 + w46*phos/5 + w51*thr/3 + w56) + w70*tanh(w2*adp/5 + w7*asa/0.1+ w12*asp/3 + w17*aspp/0.01+ w22*atp/15 + w27*hs/0.3 + w32*hsp/0.15+ w37*nadp/2 + w42*nadph/3 + w47*phos/5 + w52*thr/3 + w57)+ w75*tanh(w3*adp/5 + w8*asa/0.1+ w13*asp/3 + w18*aspp/0.01+ w23*atp/15 + w28*hs/0.3 + w33*hsp/0.15+ w38*nadp/2 + w43*nadph/3 + w48*phos/5 + w53*thr/3 + w58) + w80*tanh(w4*adp/5 + w9*asa/0.1+ w14*asp/3 + w19*aspp/0.01+ w24*atp/15 + w29*hs/0.3 + w34*hsp/0.15+ w39*nadp/2 + w44*nadph/3 + w49*phos/5 + w54*thr/3 + w59) + w85*tanh(w5*adp/5 + w10*asa/0.1+ w15*asp/3 + w20*aspp/0.01+ w25*atp/15 + w30*hs/0.3 + w35*hsp/0.15+ w40*nadp/2 + w45*nadph/3 + w50*phos/5 + w55*thr/3 + w60) + w90) +w129";
chassagnole1hyb.ruleAss(5).id="vhkr";
chassagnole1hyb.ruleAss(5).val="w95* tanh(w61*tanh(w1*adp/5 + w6*asa/0.1+ w11*asp/3 + w16*aspp/0.01+ w21*atp/15 + w26*hs/0.3 + w31*hsp/0.15+ w36*nadp/2 + w41*nadph/3 + w46*phos/5 + w51*thr/3 + w56) + w66*tanh(w2*adp/5 + w7*asa/0.1+ w12*asp/3 + w17*aspp/0.01+ w22*atp/15 + w27*hs/0.3 + w32*hsp/0.15+ w37*nadp/2 + w42*nadph/3 + w47*phos/5 + w52*thr/3 + w57)+ w71*tanh(w3*adp/5 + w8*asa/0.1+ w13*asp/3 + w18*aspp/0.01+ w23*atp/15 + w28*hs/0.3 + w33*hsp/0.15+ w38*nadp/2 + w43*nadph/3 + w48*phos/5 + w53*thr/3 + w58) + w76*tanh(w4*adp/5 + w9*asa/0.1+ w14*asp/3 + w19*aspp/0.01+ w24*atp/15 + w29*hs/0.3 + w34*hsp/0.15+ w39*nadp/2 + w44*nadph/3 + w49*phos/5 + w54*thr/3 + w59)+ w81*tanh(w5*adp/5 + w10*asa/0.1+ w15*asp/3 + w20*aspp/0.01+ w25*atp/15 + w30*hs/0.3 + w35*hsp/0.15+ w40*nadp/2 + w45*nadph/3 + w50*phos/5 + w55*thr/3 + w60) + w86) +w102* tanh(w62*tanh(w1*adp/5 + w6*asa/0.1+ w11*asp/3 + w16*aspp/0.01+ w21*atp/15 + w26*hs/0.3 + w31*hsp/0.15+ w36*nadp/2 + w41*nadph/3 + w46*phos/5 + w51*thr/3 + w56) + w67*tanh(w2*adp/5 + w7*asa/0.1+ w12*asp/3 + w17*aspp/0.01+ w22*atp/15 + w27*hs/0.3 + w32*hsp/0.15+ w37*nadp/2 + w42*nadph/3 + w47*phos/5 + w52*thr/3 + w57)+ w72*tanh(w3*adp/5 + w8*asa/0.1+ w13*asp/3 + w18*aspp/0.01+ w23*atp/15 + w28*hs/0.3 + w33*hsp/0.15+ w38*nadp/2 + w43*nadph/3 + w48*phos/5 + w53*thr/3 + w58) + w77*tanh(w4*adp/5 + w9*asa/0.1+ w14*asp/3 + w19*aspp/0.01+ w24*atp/15 + w29*hs/0.3 + w34*hsp/0.15+ w39*nadp/2 + w44*nadph/3 + w49*phos/5 + w54*thr/3 + w59)+ w82*tanh(w5*adp/5 + w10*asa/0.1+ w15*asp/3 + w20*aspp/0.01+ w25*atp/15 + w30*hs/0.3 + w35*hsp/0.15+ w40*nadp/2 + w45*nadph/3 + w50*phos/5 + w55*thr/3 + w60) + w87) +w109* tanh(w63*tanh(w1*adp/5 + w6*asa/0.1+ w11*asp/3 + w16*aspp/0.01+ w21*atp/15 + w26*hs/0.3 + w31*hsp/0.15+ w36*nadp/2 + w41*nadph/3 + w46*phos/5 + w51*thr/3 + w56) + w68*tanh(w2*adp/5 + w7*asa/0.1+ w12*asp/3 + w17*aspp/0.01+ w22*atp/15 + w27*hs/0.3 + w32*hsp/0.15+ w37*nadp/2 + w42*nadph/3 + w47*phos/5 + w52*thr/3 + w57)+ w73*tanh(w3*adp/5 + w8*asa/0.1+ w13*asp/3 + w18*aspp/0.01+ w23*atp/15 + w28*hs/0.3 + w33*hsp/0.15+ w38*nadp/2 + w43*nadph/3 + w48*phos/5 + w53*thr/3 + w58) + w78*tanh(w4*adp/5 + w9*asa/0.1+ w14*asp/3 + w19*aspp/0.01+ w24*atp/15 + w29*hs/0.3 + w34*hsp/0.15+ w39*nadp/2 + w44*nadph/3 + w49*phos/5 + w54*thr/3 + w59)+ w83*tanh(w5*adp/5 + w10*asa/0.1+ w15*asp/3 + w20*aspp/0.01+ w25*atp/15 + w30*hs/0.3 + w35*hsp/0.15+ w40*nadp/2 + w45*nadph/3 + w50*phos/5 + w55*thr/3 + w60) + w88) +w116* tanh(w64*tanh(w1*adp/5 + w6*asa/0.1+ w11*asp/3 + w16*aspp/0.01+ w21*atp/15 + w26*hs/0.3 + w31*hsp/0.15+ w36*nadp/2 + w41*nadph/3 + w46*phos/5 + w51*thr/3 + w56) + w69*tanh(w2*adp/5 + w7*asa/0.1+ w12*asp/3 + w17*aspp/0.01+ w22*atp/15 + w27*hs/0.3 + w32*hsp/0.15+ w37*nadp/2 + w42*nadph/3 + w47*phos/5 + w52*thr/3 + w57)+ w74*tanh(w3*adp/5 + w8*asa/0.1+ w13*asp/3 + w18*aspp/0.01+ w23*atp/15 + w28*hs/0.3 + w33*hsp/0.15+ w38*nadp/2 + w43*nadph/3 + w48*phos/5 + w53*thr/3 + w58) + w79*tanh(w4*adp/5 + w9*asa/0.1+ w14*asp/3 + w19*aspp/0.01+ w24*atp/15 + w29*hs/0.3 + w34*hsp/0.15+ w39*nadp/2 + w44*nadph/3 + w49*phos/5 + w54*thr/3 + w59)+ w84*tanh(w5*adp/5 + w10*asa/0.1+ w15*asp/3 + w20*aspp/0.01+ w25*atp/15 + w30*hs/0.3 + w35*hsp/0.15+ w40*nadp/2 + w45*nadph/3 + w50*phos/5 + w55*thr/3 + w60) + w89) +w123* tanh(w65*tanh(w1*adp/5 + w6*asa/0.1+ w11*asp/3 + w16*aspp/0.01+ w21*atp/15 + w26*hs/0.3 + w31*hsp/0.15+ w36*nadp/2 + w41*nadph/3 + w46*phos/5 + w51*thr/3 + w56) + w70*tanh(w2*adp/5 + w7*asa/0.1+ w12*asp/3 + w17*aspp/0.01+ w22*atp/15 + w27*hs/0.3 + w32*hsp/0.15+ w37*nadp/2 + w42*nadph/3 + w47*phos/5 + w52*thr/3 + w57)+ w75*tanh(w3*adp/5 + w8*asa/0.1+ w13*asp/3 + w18*aspp/0.01+ w23*atp/15 + w28*hs/0.3 + w33*hsp/0.15+ w38*nadp/2 + w43*nadph/3 + w48*phos/5 + w53*thr/3 + w58) + w80*tanh(w4*adp/5 + w9*asa/0.1+ w14*asp/3 + w19*aspp/0.01+ w24*atp/15 + w29*hs/0.3 + w34*hsp/0.15+ w39*nadp/2 + w44*nadph/3 + w49*phos/5 + w54*thr/3 + w59) + w85*tanh(w5*adp/5 + w10*asa/0.1+ w15*asp/3 + w20*aspp/0.01+ w25*atp/15 + w30*hs/0.3 + w35*hsp/0.15+ w40*nadp/2 + w45*nadph/3 + w50*phos/5 + w55*thr/3 + w60) + w90) +w130";
chassagnole1hyb.ruleAss(6).id="vnadph_endor";
chassagnole1hyb.ruleAss(6).val="w96* tanh(w61*tanh(w1*adp/5 + w6*asa/0.1+ w11*asp/3 + w16*aspp/0.01+ w21*atp/15 + w26*hs/0.3 + w31*hsp/0.15+ w36*nadp/2 + w41*nadph/3 + w46*phos/5 + w51*thr/3 + w56) + w66*tanh(w2*adp/5 + w7*asa/0.1+ w12*asp/3 + w17*aspp/0.01+ w22*atp/15 + w27*hs/0.3 + w32*hsp/0.15+ w37*nadp/2 + w42*nadph/3 + w47*phos/5 + w52*thr/3 + w57)+ w71*tanh(w3*adp/5 + w8*asa/0.1+ w13*asp/3 + w18*aspp/0.01+ w23*atp/15 + w28*hs/0.3 + w33*hsp/0.15+ w38*nadp/2 + w43*nadph/3 + w48*phos/5 + w53*thr/3 + w58) + w76*tanh(w4*adp/5 + w9*asa/0.1+ w14*asp/3 + w19*aspp/0.01+ w24*atp/15 + w29*hs/0.3 + w34*hsp/0.15+ w39*nadp/2 + w44*nadph/3 + w49*phos/5 + w54*thr/3 + w59)+ w81*tanh(w5*adp/5 + w10*asa/0.1+ w15*asp/3 + w20*aspp/0.01+ w25*atp/15 + w30*hs/0.3 + w35*hsp/0.15+ w40*nadp/2 + w45*nadph/3 + w50*phos/5 + w55*thr/3 + w60) + w86) +w103* tanh(w62*tanh(w1*adp/5 + w6*asa/0.1+ w11*asp/3 + w16*aspp/0.01+ w21*atp/15 + w26*hs/0.3 + w31*hsp/0.15+ w36*nadp/2 + w41*nadph/3 + w46*phos/5 + w51*thr/3 + w56) + w67*tanh(w2*adp/5 + w7*asa/0.1+ w12*asp/3 + w17*aspp/0.01+ w22*atp/15 + w27*hs/0.3 + w32*hsp/0.15+ w37*nadp/2 + w42*nadph/3 + w47*phos/5 + w52*thr/3 + w57)+ w72*tanh(w3*adp/5 + w8*asa/0.1+ w13*asp/3 + w18*aspp/0.01+ w23*atp/15 + w28*hs/0.3 + w33*hsp/0.15+ w38*nadp/2 + w43*nadph/3 + w48*phos/5 + w53*thr/3 + w58) + w77*tanh(w4*adp/5 + w9*asa/0.1+ w14*asp/3 + w19*aspp/0.01+ w24*atp/15 + w29*hs/0.3 + w34*hsp/0.15+ w39*nadp/2 + w44*nadph/3 + w49*phos/5 + w54*thr/3 + w59)+ w82*tanh(w5*adp/5 + w10*asa/0.1+ w15*asp/3 + w20*aspp/0.01+ w25*atp/15 + w30*hs/0.3 + w35*hsp/0.15+ w40*nadp/2 + w45*nadph/3 + w50*phos/5 + w55*thr/3 + w60) + w87) +w110* tanh(w63*tanh(w1*adp/5 + w6*asa/0.1+ w11*asp/3 + w16*aspp/0.01+ w21*atp/15 + w26*hs/0.3 + w31*hsp/0.15+ w36*nadp/2 + w41*nadph/3 + w46*phos/5 + w51*thr/3 + w56) + w68*tanh(w2*adp/5 + w7*asa/0.1+ w12*asp/3 + w17*aspp/0.01+ w22*atp/15 + w27*hs/0.3 + w32*hsp/0.15+ w37*nadp/2 + w42*nadph/3 + w47*phos/5 + w52*thr/3 + w57)+ w73*tanh(w3*adp/5 + w8*asa/0.1+ w13*asp/3 + w18*aspp/0.01+ w23*atp/15 + w28*hs/0.3 + w33*hsp/0.15+ w38*nadp/2 + w43*nadph/3 + w48*phos/5 + w53*thr/3 + w58) + w78*tanh(w4*adp/5 + w9*asa/0.1+ w14*asp/3 + w19*aspp/0.01+ w24*atp/15 + w29*hs/0.3 + w34*hsp/0.15+ w39*nadp/2 + w44*nadph/3 + w49*phos/5 + w54*thr/3 + w59)+ w83*tanh(w5*adp/5 + w10*asa/0.1+ w15*asp/3 + w20*aspp/0.01+ w25*atp/15 + w30*hs/0.3 + w35*hsp/0.15+ w40*nadp/2 + w45*nadph/3 + w50*phos/5 + w55*thr/3 + w60) + w88) +w117* tanh(w64*tanh(w1*adp/5 + w6*asa/0.1+ w11*asp/3 + w16*aspp/0.01+ w21*atp/15 + w26*hs/0.3 + w31*hsp/0.15+ w36*nadp/2 + w41*nadph/3 + w46*phos/5 + w51*thr/3 + w56) + w69*tanh(w2*adp/5 + w7*asa/0.1+ w12*asp/3 + w17*aspp/0.01+ w22*atp/15 + w27*hs/0.3 + w32*hsp/0.15+ w37*nadp/2 + w42*nadph/3 + w47*phos/5 + w52*thr/3 + w57)+ w74*tanh(w3*adp/5 + w8*asa/0.1+ w13*asp/3 + w18*aspp/0.01+ w23*atp/15 + w28*hs/0.3 + w33*hsp/0.15+ w38*nadp/2 + w43*nadph/3 + w48*phos/5 + w53*thr/3 + w58) + w79*tanh(w4*adp/5 + w9*asa/0.1+ w14*asp/3 + w19*aspp/0.01+ w24*atp/15 + w29*hs/0.3 + w34*hsp/0.15+ w39*nadp/2 + w44*nadph/3 + w49*phos/5 + w54*thr/3 + w59)+ w84*tanh(w5*adp/5 + w10*asa/0.1+ w15*asp/3 + w20*aspp/0.01+ w25*atp/15 + w30*hs/0.3 + w35*hsp/0.15+ w40*nadp/2 + w45*nadph/3 + w50*phos/5 + w55*thr/3 + w60) + w89) +w124* tanh(w65*tanh(w1*adp/5 + w6*asa/0.1+ w11*asp/3 + w16*aspp/0.01+ w21*atp/15 + w26*hs/0.3 + w31*hsp/0.15+ w36*nadp/2 + w41*nadph/3 + w46*phos/5 + w51*thr/3 + w56) + w70*tanh(w2*adp/5 + w7*asa/0.1+ w12*asp/3 + w17*aspp/0.01+ w22*atp/15 + w27*hs/0.3 + w32*hsp/0.15+ w37*nadp/2 + w42*nadph/3 + w47*phos/5 + w52*thr/3 + w57)+ w75*tanh(w3*adp/5 + w8*asa/0.1+ w13*asp/3 + w18*aspp/0.01+ w23*atp/15 + w28*hs/0.3 + w33*hsp/0.15+ w38*nadp/2 + w43*nadph/3 + w48*phos/5 + w53*thr/3 + w58) + w80*tanh(w4*adp/5 + w9*asa/0.1+ w14*asp/3 + w19*aspp/0.01+ w24*atp/15 + w29*hs/0.3 + w34*hsp/0.15+ w39*nadp/2 + w44*nadph/3 + w49*phos/5 + w54*thr/3 + w59) + w85*tanh(w5*adp/5 + w10*asa/0.1+ w15*asp/3 + w20*aspp/0.01+ w25*atp/15 + w30*hs/0.3 + w35*hsp/0.15+ w40*nadp/2 + w45*nadph/3 + w50*phos/5 + w55*thr/3 + w60) + w90) +w131";
chassagnole1hyb.ruleAss(7).id="vtsyr";
chassagnole1hyb.ruleAss(7).val="w97* tanh(w61*tanh(w1*adp/5 + w6*asa/0.1+ w11*asp/3 + w16*aspp/0.01+ w21*atp/15 + w26*hs/0.3 + w31*hsp/0.15+ w36*nadp/2 + w41*nadph/3 + w46*phos/5 + w51*thr/3 + w56) + w66*tanh(w2*adp/5 + w7*asa/0.1+ w12*asp/3 + w17*aspp/0.01+ w22*atp/15 + w27*hs/0.3 + w32*hsp/0.15+ w37*nadp/2 + w42*nadph/3 + w47*phos/5 + w52*thr/3 + w57)+ w71*tanh(w3*adp/5 + w8*asa/0.1+ w13*asp/3 + w18*aspp/0.01+ w23*atp/15 + w28*hs/0.3 + w33*hsp/0.15+ w38*nadp/2 + w43*nadph/3 + w48*phos/5 + w53*thr/3 + w58) + w76*tanh(w4*adp/5 + w9*asa/0.1+ w14*asp/3 + w19*aspp/0.01+ w24*atp/15 + w29*hs/0.3 + w34*hsp/0.15+ w39*nadp/2 + w44*nadph/3 + w49*phos/5 + w54*thr/3 + w59)+ w81*tanh(w5*adp/5 + w10*asa/0.1+ w15*asp/3 + w20*aspp/0.01+ w25*atp/15 + w30*hs/0.3 + w35*hsp/0.15+ w40*nadp/2 + w45*nadph/3 + w50*phos/5 + w55*thr/3 + w60) + w86) +w104* tanh(w62*tanh(w1*adp/5 + w6*asa/0.1+ w11*asp/3 + w16*aspp/0.01+ w21*atp/15 + w26*hs/0.3 + w31*hsp/0.15+ w36*nadp/2 + w41*nadph/3 + w46*phos/5 + w51*thr/3 + w56) + w67*tanh(w2*adp/5 + w7*asa/0.1+ w12*asp/3 + w17*aspp/0.01+ w22*atp/15 + w27*hs/0.3 + w32*hsp/0.15+ w37*nadp/2 + w42*nadph/3 + w47*phos/5 + w52*thr/3 + w57)+ w72*tanh(w3*adp/5 + w8*asa/0.1+ w13*asp/3 + w18*aspp/0.01+ w23*atp/15 + w28*hs/0.3 + w33*hsp/0.15+ w38*nadp/2 + w43*nadph/3 + w48*phos/5 + w53*thr/3 + w58) + w77*tanh(w4*adp/5 + w9*asa/0.1+ w14*asp/3 + w19*aspp/0.01+ w24*atp/15 + w29*hs/0.3 + w34*hsp/0.15+ w39*nadp/2 + w44*nadph/3 + w49*phos/5 + w54*thr/3 + w59)+ w82*tanh(w5*adp/5 + w10*asa/0.1+ w15*asp/3 + w20*aspp/0.01+ w25*atp/15 + w30*hs/0.3 + w35*hsp/0.15+ w40*nadp/2 + w45*nadph/3 + w50*phos/5 + w55*thr/3 + w60) + w87) +w111* tanh(w63*tanh(w1*adp/5 + w6*asa/0.1+ w11*asp/3 + w16*aspp/0.01+ w21*atp/15 + w26*hs/0.3 + w31*hsp/0.15+ w36*nadp/2 + w41*nadph/3 + w46*phos/5 + w51*thr/3 + w56) + w68*tanh(w2*adp/5 + w7*asa/0.1+ w12*asp/3 + w17*aspp/0.01+ w22*atp/15 + w27*hs/0.3 + w32*hsp/0.15+ w37*nadp/2 + w42*nadph/3 + w47*phos/5 + w52*thr/3 + w57)+ w73*tanh(w3*adp/5 + w8*asa/0.1+ w13*asp/3 + w18*aspp/0.01+ w23*atp/15 + w28*hs/0.3 + w33*hsp/0.15+ w38*nadp/2 + w43*nadph/3 + w48*phos/5 + w53*thr/3 + w58) + w78*tanh(w4*adp/5 + w9*asa/0.1+ w14*asp/3 + w19*aspp/0.01+ w24*atp/15 + w29*hs/0.3 + w34*hsp/0.15+ w39*nadp/2 + w44*nadph/3 + w49*phos/5 + w54*thr/3 + w59)+ w83*tanh(w5*adp/5 + w10*asa/0.1+ w15*asp/3 + w20*aspp/0.01+ w25*atp/15 + w30*hs/0.3 + w35*hsp/0.15+ w40*nadp/2 + w45*nadph/3 + w50*phos/5 + w55*thr/3 + w60) + w88) +w118* tanh(w64*tanh(w1*adp/5 + w6*asa/0.1+ w11*asp/3 + w16*aspp/0.01+ w21*atp/15 + w26*hs/0.3 + w31*hsp/0.15+ w36*nadp/2 + w41*nadph/3 + w46*phos/5 + w51*thr/3 + w56) + w69*tanh(w2*adp/5 + w7*asa/0.1+ w12*asp/3 + w17*aspp/0.01+ w22*atp/15 + w27*hs/0.3 + w32*hsp/0.15+ w37*nadp/2 + w42*nadph/3 + w47*phos/5 + w52*thr/3 + w57)+ w74*tanh(w3*adp/5 + w8*asa/0.1+ w13*asp/3 + w18*aspp/0.01+ w23*atp/15 + w28*hs/0.3 + w33*hsp/0.15+ w38*nadp/2 + w43*nadph/3 + w48*phos/5 + w53*thr/3 + w58) + w79*tanh(w4*adp/5 + w9*asa/0.1+ w14*asp/3 + w19*aspp/0.01+ w24*atp/15 + w29*hs/0.3 + w34*hsp/0.15+ w39*nadp/2 + w44*nadph/3 + w49*phos/5 + w54*thr/3 + w59)+ w84*tanh(w5*adp/5 + w10*asa/0.1+ w15*asp/3 + w20*aspp/0.01+ w25*atp/15 + w30*hs/0.3 + w35*hsp/0.15+ w40*nadp/2 + w45*nadph/3 + w50*phos/5 + w55*thr/3 + w60) + w89) +w125* tanh(w65*tanh(w1*adp/5 + w6*asa/0.1+ w11*asp/3 + w16*aspp/0.01+ w21*atp/15 + w26*hs/0.3 + w31*hsp/0.15+ w36*nadp/2 + w41*nadph/3 + w46*phos/5 + w51*thr/3 + w56) + w70*tanh(w2*adp/5 + w7*asa/0.1+ w12*asp/3 + w17*aspp/0.01+ w22*atp/15 + w27*hs/0.3 + w32*hsp/0.15+ w37*nadp/2 + w42*nadph/3 + w47*phos/5 + w52*thr/3 + w57)+ w75*tanh(w3*adp/5 + w8*asa/0.1+ w13*asp/3 + w18*aspp/0.01+ w23*atp/15 + w28*hs/0.3 + w33*hsp/0.15+ w38*nadp/2 + w43*nadph/3 + w48*phos/5 + w53*thr/3 + w58) + w80*tanh(w4*adp/5 + w9*asa/0.1+ w14*asp/3 + w19*aspp/0.01+ w24*atp/15 + w29*hs/0.3 + w34*hsp/0.15+ w39*nadp/2 + w44*nadph/3 + w49*phos/5 + w54*thr/3 + w59) + w85*tanh(w5*adp/5 + w10*asa/0.1+ w15*asp/3 + w20*aspp/0.01+ w25*atp/15 + w30*hs/0.3 + w35*hsp/0.15+ w40*nadp/2 + w45*nadph/3 + w50*phos/5 + w55*thr/3 + w60) + w90) +w132";

% Events
chassagnole1hyb.nevent=0;

% Reactions
chassagnole1hyb.nreaction=7;
chassagnole1hyb.reaction(1).id="vak";
chassagnole1hyb.reaction(1).rate="vakr";
chassagnole1hyb.reaction(1).vak="['1', '0', '-1', '1', '-1', '0', '0', '0', '0', '0', '0']";
chassagnole1hyb.reaction(2).id="vasd";
chassagnole1hyb.reaction(2).rate="vasdr";
chassagnole1hyb.reaction(2).vasd="['0', '1', '0', '-1', '0', '0', '0', '1', '-1', '1', '0']";
chassagnole1hyb.reaction(3).id="vatpase";
chassagnole1hyb.reaction(3).rate="vatpaser";
chassagnole1hyb.reaction(3).vatpase="['1', '0', '0', '0', '-1', '0', '0', '0', '0', '1', '0']";
chassagnole1hyb.reaction(4).id="vhdh";
chassagnole1hyb.reaction(4).rate="vhdhr";
chassagnole1hyb.reaction(4).vhdh="['0', '-1', '0', '0', '0', '1', '0', '1', '-1', '0', '0']";
chassagnole1hyb.reaction(5).id="vhk";
chassagnole1hyb.reaction(5).rate="vhkr";
chassagnole1hyb.reaction(5).vhk="['1', '0', '0', '0', '-1', '-1', '1', '0', '0', '0', '0']";
chassagnole1hyb.reaction(6).id="vnadph_endo";
chassagnole1hyb.reaction(6).rate="vnadph_endor";
chassagnole1hyb.reaction(6).vnadph_endo="['0', '0', '0', '0', '0', '0', '0', '1', '-1', '0', '0']";
chassagnole1hyb.reaction(7).id="vtsy";
chassagnole1hyb.reaction(7).rate="vtsyr";
chassagnole1hyb.reaction(7).vtsy="['0', '0', '0', '0', '0', '0', '-1', '0', '0', '1', '1']";

% Rate rules
chassagnole1hyb.nraterules=0;


% %model configuration
chass.time.min=0;
chass.time.max=100;
chass.time.id='t[h]';
chass.time.TAU=0.25;
chass.time.tspan=0:1:100;

% control---------------------------
chass.ncontrol=1;
chass.control(1).id= 'None';
chass.control(1).val= 0;
chass.control(1).min= 0;
chass.control(1).max= 2;
chass.control(1).constant = 0;
chass.fun_control=@control_function_chass;
% 
% % MLM - Machine Learning Model --------------------------------------------
chass.mlm.id = 'mlpnet'; %'user-defined'; %'mlpnet' %mlp1H
chass.mlm.nx = 11;
chass.mlm.x(1).id = 'anninp1';
chass.mlm.x(1).val= 'adp';
chass.mlm.x(1).min= 0; 
chass.mlm.x(1).max= 5;
chass.mlm.x(2).id = 'anninp2';
chass.mlm.x(2).val= 'asa';
chass.mlm.x(2).min= 0; 
chass.mlm.x(2).max= 0.1;
chass.mlm.x(3).id = 'anninp3';
chass.mlm.x(3).val= 'asp';
chass.mlm.x(3).min= 0; 
chass.mlm.x(3).max= 3;
chass.mlm.x(4).id = 'anninp4';
chass.mlm.x(4).val= 'aspp';
chass.mlm.x(4).min= 0; 
chass.mlm.x(4).max= 0.01;
chass.mlm.x(5).id = 'anninp5';
chass.mlm.x(5).val= 'atp';
chass.mlm.x(5).min= 0; 
chass.mlm.x(5).max= 15;
chass.mlm.x(6).id = 'anninp6';
chass.mlm.x(6).val= 'hs';
chass.mlm.x(6).min= 0; 
chass.mlm.x(6).max= 0.3;
chass.mlm.x(7).id = 'anninp7';
chass.mlm.x(7).val= 'hsp';
chass.mlm.x(7).min= 0; 
chass.mlm.x(7).max= 0.15;
chass.mlm.x(8).id = 'anninp8';
chass.mlm.x(8).val= 'nadp';
chass.mlm.x(8).min= 0; 
chass.mlm.x(8).max= 2;
chass.mlm.x(9).id = 'anninp9';
chass.mlm.x(9).val= 'nadph';
chass.mlm.x(9).min= 0; 
chass.mlm.x(9).max= 3;
chass.mlm.x(10).id = 'anninp10';
chass.mlm.x(10).val= 'phos';
chass.mlm.x(10).min= 0; 
chass.mlm.x(10).max= 5;
chass.mlm.x(11).id = 'anninp11';
chass.mlm.x(11).val= 'thr';
chass.mlm.x(11).min= 0; 
chass.mlm.x(11).max= 3;
chass.mlm.ny = 7;
chass.mlm.y(1).id = 'vak';
chass.mlm.y(1).val= 'rann1';
chass.mlm.y(1).min= 0; 
chass.mlm.y(1).max= 0.5;
chass.mlm.y(2).id = 'vasd';
chass.mlm.y(2).val= 'rann2';
chass.mlm.y(2).min= 0; 
chass.mlm.y(2).max= 0.4;
chass.mlm.y(3).id = 'vatpase';
chass.mlm.y(3).val= 'rann3';
chass.mlm.y(3).min= 0; 
chass.mlm.y(3).max= 4;
chass.mlm.y(4).id = 'vhdh';
chass.mlm.y(4).val= 'rann4';
chass.mlm.y(4).min= 0; 
chass.mlm.y(4).max= 4;
chass.mlm.y(5).id = 'vhk';
chass.mlm.y(5).val= 'rann5';
chass.mlm.y(5).min= 0; 
chass.mlm.y(5).max= 4;
chass.mlm.y(6).id = 'vnadphendo';
chass.mlm.y(6).val= 'rann6';
chass.mlm.y(6).min= 0; 
chass.mlm.y(6).max= 4;
chass.mlm.y(7).id = 'vtsy';
chass.mlm.y(7).val= 'rann7';
chass.mlm.y(7).min= 0; 
chass.mlm.y(7).max= 4;
chass.mlm.options={'hidden nodes', [5 5]};
chass.mlm.layer=1 %1-tanh 2-ReLu
chass.mlm.xfun=str2func('autoA_hybmod_anninp'); %generated automatically
chass.mlm.yfun=str2func('autoA_hybmod_rann'); %only used if 'user-defined'
chass.symbolic='full-symbolic';
chass.symbolic='semi-symbolic';

%Model configuration

chass.id='chass';

chass.time.min=0;
chass.time.max=100;
chass.time.id='t[h]';
chass.time.TAU=0.1;
chass.time.tspan=0:1:100;

chass.datasource=3; %1 - text file; 2- excel file; 3-userdefined function
chass.datafun=@chassdata;

%training configuration
chass.mode=3;%;    %1-indirect, 2-direct, 3-semidirect
chass.method=4;    %1-lev-marquardt, 2-quasi-Newton   3- Simulated Annealing
chass.jacobian=1;  %1-ON, 0- OFF   [ONLY FOR LEVENBERG-MARQUARDT]
chass.hessian=0;   %1-ON  0- OFF   [only for quasi-Newton]
chass.derivativecheck='off'; %'on' or 'off' [ONLY FOR LEVENBERG-MARQUARDT]
chass.niter=5000;
chass.niteroptim=1;
chass.nstep=1;
chass.display='off';   %'off','Iter'
chass.bootstrap=0; %1-do bootstrap; 0-no boostrapp
chass.nensemble=1; %number of models to aggregate >=1; if >1 confidence intervals are computed
chass.crossval=0;  %0 - no cross-validation; 1 - do crossvalidation


end