% --------------------------------------------------------------------------
% hybrid model definition data structure

% Species
parkramhyb.nspecies=4;
parkramhyb.species(1).id="PM";
parkramhyb.species(1).val=0;
parkramhyb.species(1).compartment="V";
parkramhyb.species(1).fixed=0;
parkramhyb.species(1).min=0;
parkramhyb.species(1).max=15;
parkramhyb.species(1).isres=1;
parkramhyb.species(2).id="PT";
parkramhyb.species(2).val=0;
parkramhyb.species(2).compartment="V";
parkramhyb.species(2).fixed=0;
parkramhyb.species(2).min=0;
parkramhyb.species(2).max=15;
parkramhyb.species(2).isres=1;
parkramhyb.species(3).id="S";
parkramhyb.species(3).val=5;
parkramhyb.species(3).compartment="V";
parkramhyb.species(3).fixed=0;
parkramhyb.species(3).min=0;
parkramhyb.species(3).max=15;
parkramhyb.species(3).isres=1;
parkramhyb.species(4).id="X";
parkramhyb.species(4).val=1;
parkramhyb.species(4).compartment="V";
parkramhyb.species(4).fixed=0;
parkramhyb.species(4).min=0;
parkramhyb.species(4).max=15;
parkramhyb.species(4).isres=1;

% Compartments
parkramhyb.ncompartments=1;
parkramhyb.compartments(1).id="V";
parkramhyb.compartments(1).val=1;
parkramhyb.compartments(1).fixed=0;
parkramhyb.compartments(1).min=0;
parkramhyb.compartments(1).max=15;
parkramhyb.compartments(1).isres=0;

% Parameters
parkramhyb.nparameters=36;
parkramhyb.parameters(1).id="D";
parkramhyb.parameters(1).val="NaN";
parkramhyb.parameters(1).fixed=0;
parkramhyb.parameters(1).reaction="global";
parkramhyb.parameters(2).id="Feed";
parkramhyb.parameters(2).val="0.525";
parkramhyb.parameters(2).fixed=0;
parkramhyb.parameters(2).reaction="global";
parkramhyb.parameters(3).id="Sin";
parkramhyb.parameters(3).val="20";
parkramhyb.parameters(3).fixed=0;
parkramhyb.parameters(3).reaction="global";
parkramhyb.parameters(4).id="Y";
parkramhyb.parameters(4).val="7.3";
parkramhyb.parameters(4).fixed=0;
parkramhyb.parameters(4).reaction="global";
parkramhyb.parameters(5).id="miu";
parkramhyb.parameters(5).val="NaN";
parkramhyb.parameters(5).fixed=0;
parkramhyb.parameters(5).reaction="global";
parkramhyb.parameters(6).id="miumax";
parkramhyb.parameters(6).val="21.87";
parkramhyb.parameters(6).fixed=0;
parkramhyb.parameters(6).reaction="global";
parkramhyb.parameters(7).id="vPM";
parkramhyb.parameters(7).val="NaN";
parkramhyb.parameters(7).fixed=0;
parkramhyb.parameters(7).reaction="global";
parkramhyb.parameters(8).id="vPT";
parkramhyb.parameters(8).val="NaN";
parkramhyb.parameters(8).fixed=0;
parkramhyb.parameters(8).reaction="global";
parkramhyb.parameters(9).id="w1";
parkramhyb.parameters(9).val="0.0414588908820365";
parkramhyb.parameters(9).fixed=0;
parkramhyb.parameters(9).reaction="global";
parkramhyb.parameters(10).id="w10";
parkramhyb.parameters(10).val="-0.212900191683161";
parkramhyb.parameters(10).fixed=0;
parkramhyb.parameters(10).reaction="global";
parkramhyb.parameters(11).id="w11";
parkramhyb.parameters(11).val="-0.232671840384856";
parkramhyb.parameters(11).fixed=0;
parkramhyb.parameters(11).reaction="global";
parkramhyb.parameters(12).id="w12";
parkramhyb.parameters(12).val="0.228781951784631";
parkramhyb.parameters(12).fixed=0;
parkramhyb.parameters(12).reaction="global";
parkramhyb.parameters(13).id="w13";
parkramhyb.parameters(13).val="-0.114945296164745";
parkramhyb.parameters(13).fixed=0;
parkramhyb.parameters(13).reaction="global";
parkramhyb.parameters(14).id="w14";
parkramhyb.parameters(14).val="0.0379815914883312";
parkramhyb.parameters(14).fixed=0;
parkramhyb.parameters(14).reaction="global";
parkramhyb.parameters(15).id="w15";
parkramhyb.parameters(15).val="-1.71264096360593";
parkramhyb.parameters(15).fixed=0;
parkramhyb.parameters(15).reaction="global";
parkramhyb.parameters(16).id="w16";
parkramhyb.parameters(16).val="-1.59105910244074";
parkramhyb.parameters(16).fixed=0;
parkramhyb.parameters(16).reaction="global";
parkramhyb.parameters(17).id="w17";
parkramhyb.parameters(17).val="0.224405531803729";
parkramhyb.parameters(17).fixed=0;
parkramhyb.parameters(17).reaction="global";
parkramhyb.parameters(18).id="w18";
parkramhyb.parameters(18).val="-0.00499762176191337";
parkramhyb.parameters(18).fixed=0;
parkramhyb.parameters(18).reaction="global";
parkramhyb.parameters(19).id="w19";
parkramhyb.parameters(19).val="0.354403930226447";
parkramhyb.parameters(19).fixed=0;
parkramhyb.parameters(19).reaction="global";
parkramhyb.parameters(20).id="w2";
parkramhyb.parameters(20).val="-3.13092622780681";
parkramhyb.parameters(20).fixed=0;
parkramhyb.parameters(20).reaction="global";
parkramhyb.parameters(21).id="w20";
parkramhyb.parameters(21).val="0.100498926329192";
parkramhyb.parameters(21).fixed=0;
parkramhyb.parameters(21).reaction="global";
parkramhyb.parameters(22).id="w21";
parkramhyb.parameters(22).val="-0.909433512870909";
parkramhyb.parameters(22).fixed=0;
parkramhyb.parameters(22).reaction="global";
parkramhyb.parameters(23).id="w22";
parkramhyb.parameters(23).val="1.62054514677563";
parkramhyb.parameters(23).fixed=0;
parkramhyb.parameters(23).reaction="global";
parkramhyb.parameters(24).id="w23";
parkramhyb.parameters(24).val="-0.208960252011949";
parkramhyb.parameters(24).fixed=0;
parkramhyb.parameters(24).reaction="global";
parkramhyb.parameters(25).id="w24";
parkramhyb.parameters(25).val="0.255662124650518";
parkramhyb.parameters(25).fixed=0;
parkramhyb.parameters(25).reaction="global";
parkramhyb.parameters(26).id="w25";
parkramhyb.parameters(26).val="0.060198783422225";
parkramhyb.parameters(26).fixed=0;
parkramhyb.parameters(26).reaction="global";
parkramhyb.parameters(27).id="w26";
parkramhyb.parameters(27).val="-0.1339623236634";
parkramhyb.parameters(27).fixed=0;
parkramhyb.parameters(27).reaction="global";
parkramhyb.parameters(28).id="w27";
parkramhyb.parameters(28).val="-0.635243764418045";
parkramhyb.parameters(28).fixed=0;
parkramhyb.parameters(28).reaction="global";
parkramhyb.parameters(29).id="w28";
parkramhyb.parameters(29).val="0.460394040183919";
parkramhyb.parameters(29).fixed=0;
parkramhyb.parameters(29).reaction="global";
parkramhyb.parameters(30).id="w3";
parkramhyb.parameters(30).val="0.627110796531763";
parkramhyb.parameters(30).fixed=0;
parkramhyb.parameters(30).reaction="global";
parkramhyb.parameters(31).id="w4";
parkramhyb.parameters(31).val="3.11219556041323";
parkramhyb.parameters(31).fixed=0;
parkramhyb.parameters(31).reaction="global";
parkramhyb.parameters(32).id="w5";
parkramhyb.parameters(32).val="-0.0461372474704451";
parkramhyb.parameters(32).fixed=0;
parkramhyb.parameters(32).reaction="global";
parkramhyb.parameters(33).id="w6";
parkramhyb.parameters(33).val="-0.477119281336931";
parkramhyb.parameters(33).fixed=0;
parkramhyb.parameters(33).reaction="global";
parkramhyb.parameters(34).id="w7";
parkramhyb.parameters(34).val="-0.485421843682166";
parkramhyb.parameters(34).fixed=0;
parkramhyb.parameters(34).reaction="global";
parkramhyb.parameters(35).id="w8";
parkramhyb.parameters(35).val="0.266088001159365";
parkramhyb.parameters(35).fixed=0;
parkramhyb.parameters(35).reaction="global";
parkramhyb.parameters(36).id="w9";
parkramhyb.parameters(36).val="-0.270901138430368";
parkramhyb.parameters(36).fixed=0;
parkramhyb.parameters(36).reaction="global";

% Assignment rules
parkramhyb.nruleAss=4;
parkramhyb.ruleAss(1).id="D";
parkramhyb.ruleAss(1).val="Feed / V";
parkramhyb.ruleAss(2).id="miu";
parkramhyb.ruleAss(2).val="w11 * tanh(w1 * S + w6) + w14 * tanh(w2 * S + w7) + w17 * tanh(w3 * S + w8) + w20 * tanh(w4 * S + w9) + w23 * tanh(w5 * S + w10) + w26";
parkramhyb.ruleAss(3).id="vPM";
parkramhyb.ruleAss(3).val="w13 * tanh(w1 * S + w6) + w16 * tanh(w2 * S + w7) + w19 * tanh(w3 * S + w8) + w22 * tanh(w4 * S + w9) + w25 * tanh(w5 * S + w10) + w28";
parkramhyb.ruleAss(4).id="vPT";
parkramhyb.ruleAss(4).val="w12 * tanh(w1 * S + w6) + w15 * tanh(w2 * S + w7) + w18 * tanh(w3 * S + w8) + w21 * tanh(w4 * S + w9) + w24 * tanh(w5 * S + w10) + w27";

% Events
parkramhyb.nevent=0;

% Reactions
parkramhyb.nreaction=4;
parkramhyb.reaction(1).id="rPM";
parkramhyb.reaction(1).rate="vPM * (PT - PM) * V";
parkramhyb.reaction(1).rPM="['1.0', '1.0', '0', '0']";
parkramhyb.reaction(2).id="rPT";
parkramhyb.reaction(2).rate="vPT * X * V";
parkramhyb.reaction(2).rPT="['0', '1.0', '0', '1.0']";
parkramhyb.reaction(3).id="rSin";
parkramhyb.reaction(3).rate="D * Sin * V";
parkramhyb.reaction(3).rSin="['0', '0', '1.0', '0']";
parkramhyb.reaction(4).id="rX";
parkramhyb.reaction(4).rate="miu * X * V";
parkramhyb.reaction(4).rX="['0', '0', '-7.3', '1.0']";

% Rate rules
parkramhyb.nraterules=1;
parkramhyb.raterules(1).id="V";
parkramhyb.raterules(1).val="D * V";
parkramhyb.raterules(1).min=0;
parkramhyb.raterules(1).max=1.5;
parkramhyb.raterules(1).isres=0;


end
