import tkinter
from tkinter import *
from tkinter import filedialog, ttk, scrolledtext
import tensorflow as tf
from tensorflow import keras
from io import BytesIO
import base64
from PIL import ImageTk, Image

try:
    import xml_parser as xmlparser
    import hmod_parser as hmodparser
    import neural_network_parser
except:
    import sbml2hyb.xml_parser as xmlparser
    import sbml2hyb.hmod_parser as hmodparser
    import sbml2hyb.neural_network_parser as neural_network_parser


logo = ""


# Construct main window
root = Tk()
root.title("SBML2HYB v1.0.1")
root.geometry("1000x800")

first_level = None
second_level = None

# Vertical (y) Scroll Bar
top_frame = Frame(root, pady=10)
mid_frame = Frame(root, pady=10)
bot_frame = Frame(root, pady=10)

canvas = Canvas(top_frame, width=350, height=100)

save_label = Label(top_frame, text="File Saved!")

my_text = Text(mid_frame, wrap=NONE, height=50, width=150)

scroll_y = Scrollbar(mid_frame, orient="vertical", command=my_text.yview)
scroll_x = Scrollbar(mid_frame, orient="horizontal", command=my_text.xview)

# Root variables
smbl_file_selected = hmod_file_selected = files_l_hyb = b_load_file = added = res = None
default_file_name = ""
default_file_selected = False
default_file_selected_type = ""

is_hyb = None
error_text = ""
hmod_file_string = ""

# First window variables
curr_file_name = hyb_file = file_selected_for_conversion_l = _error_previous_state = ""
species = []
parameters = []
add_ml = None

# Second window variables
warning_text_species_selected = ""
warning_text_parameters = ""
file_selected = ""
species_checkboxes = []
parameters_checkboxes = []
h5_file = ""
hmod_file = ""


top_frame.pack()
bot_frame.pack()

mid_frame.pack()


canvas.pack()
img = ImageTk.PhotoImage(
    Image.open(BytesIO(base64.b64decode(logo))).resize((330, 80), Image.ANTIALIAS)
)
canvas.create_image(20, 20, anchor=NW, image=img)

# top_title_label = Label(top_frame, pady=20, text="SBML <-> HMOD converter")
# top_title_label.config(font=(50))
# top_title_label.pack()

# top_label = Label(top_frame, pady=10, text="Choose an SBML file to export to hmod\n"
#                                            "or\n"
#                                            "Choose an hmod file to export to SBML")
# top_label.config(font=(10))
#
# top_label.pack()

pos1 = Label(
    bot_frame, pady=10, text="Choose an SBML file to HMOD           OR", borderwidth=1
)
pos1.config(font=(50))
pos1.grid(row=0, column=0)

pos2 = Label(
    bot_frame, pady=10, text="          Choose an HMOD file to SBML", borderwidth=1
)
pos2.config(font=(50))
pos2.grid(row=0, column=1)


def open_hmod():
    open_file("hmod")


def open_xml():
    open_file("sbml")


def open_file(type):
    global first_level, file_selected_for_conversion_l, is_hyb, files_l_hyb, b_load_file, added, error_text, add_ml, parameters, species
    _error_previous_state = error_text
    # Open new window and set it up
    first_level = Toplevel(root)
    first_level.grab_set()
    first_level.title("Load HMOD file" if type == "hmod" else "Load SBML file")
    width = 600
    height = 400
    first_level.geometry("{}x{}".format(width, height))
    files_f = Frame(first_level, width=width, padx=3, pady=3)
    files_f.grid_rowconfigure(0, weight=1)
    files_f.grid_columnconfigure(0, weight=1)
    files_f.grid(row=0, column=0, columnspan=3)

    def clean_global_vars():
        global curr_file_name, hyb_file, file_selected_for_conversion_l, hmod_file_selected, hmod_file_string, files_l_hyb, b_load_file, added, res, default_file_selected_type

        curr_file_name = hyb_file = ""
        file_selected_for_conversion_l = (
            hmod_file_selected
        ) = files_l_hyb = b_load_file = added = res = None

    def confirm_button():
        global hyb_file, res, curr_file_name, default_file_selected, default_file_name, default_file_selected_type, error_text, file_selected_for_conversion_l, add_ml, _error_previous_state
        if error_text != "":  # and _error_previous_state == "":
            my_text.delete("1.0", END)
            my_text.insert(INSERT, error_text)
            scroll_y.pack(side="right", expand=True, fill="y")
            scroll_x.pack(side="bottom", expand=True, fill="x")

            my_text.configure(yscrollcommand=scroll_y.set)
            my_text.configure(xscrollcommand=scroll_x.set)
            my_btn_export.grid(row=1, column=3)

            my_text.pack(side="left")
            default_file_selected = True
            clean_global_vars()
            first_level.grab_release()
            first_level.destroy()

        elif error_text == "" and (
            curr_file_name != ""
            or (
                default_file_selected
                and default_file_name != ""
                and default_file_selected_type == type
            )
        ):
            previous_text = my_text.get("1.0", END)
            my_text.delete("1.0", END)
            save_label.config(text="")
            if type == "sbml":
                if hyb_file != "":
                    t = hyb_file
                elif (
                    default_file_selected
                    and default_file_name != ""
                    and default_file_selected_type == type
                ):
                    t = xmlparser.main(default_file_name, previous_text)[0]
                else:
                    t = res[0]
                my_text.insert(INSERT, t)
                default_file_selected_type = "hmod"
            elif type == "hmod":
                if hyb_file != "":
                    t = hmodparser.main(
                        curr_file_name if curr_file_name != "" else default_file_name,
                        hyb_file,
                    )[0]
                elif (
                    default_file_selected
                    and default_file_name != ""
                    and default_file_selected_type == type
                ):
                    t = hmodparser.main(default_file_name, previous_text)[0]
                else:
                    t = res[0]
                my_text.insert(INSERT, t)
                default_file_selected_type = "sbml"

            scroll_y.pack(side="right", expand=True, fill="y")
            scroll_x.pack(side="bottom", expand=True, fill="x")

            my_text.configure(yscrollcommand=scroll_y.set)
            my_text.configure(xscrollcommand=scroll_x.set)
            my_btn_export.grid(row=1, column=3)

            my_text.pack(side="left")
            default_file_selected = True
            clean_global_vars()
            first_level.grab_release()
            first_level.destroy()
        else:
            file_selected_for_conversion_l.config(text="Please select a file", fg="red")

    def cancel_button():
        global error_text
        clean_global_vars()
        error_text = _error_previous_state
        first_level.grab_release()
        first_level.destroy()

    def load_file():
        top_frame.filename = filedialog.askopenfilename(
            title="Select A File",
            filetypes=(("xml files", "*.xml"), ("all files", "*.*"))
            if type == "sbml"
            else (("hmod files", "*.hmod"), ("all files", "*.*")),
        )
        if top_frame.filename is None or top_frame.filename == "":
            return
        try:
            file = top_frame.filename
            global species, parameters, is_hyb, curr_file_name, files_l_hyb, b_load_file, added, res, default_file_name, error_text, hmod_file_string, add_ml, _error_previous_state

            if type == "hmod":
                hmod_file_string = open(file, "r").read()
                res = hmodparser.main(file, hmod_file_string)
            else:
                xml_file_string = open(file, "r").read()
                res = xmlparser.main(file, xml_file_string)
                hmod_file_string = res[0]

            species = res[1]
            parameters = res[2]
            global default_file_selected
            # Check if text is hybrid
            if parameters is None:
                error_text = res[0]
            elif "w1" in parameters:
                default_file_selected = False
                error_text = ""
                is_hyb = True
            else:
                error_text = ""
                default_file_selected = False
                is_hyb = False

            # Save filename
            curr_file_name = file.split("/")[-1]
            default_file_name = curr_file_name

            # Change name in the text components and add ML component if valid file
            file_selected_for_conversion_l.config(text=curr_file_name, fg="black")

            # Create ML Button if not exist
            if files_l_hyb is None:
                files_l_hyb = Label(
                    files_f, text="ML Component (optional):", borderwidth=1
                )

            files_l_hyb.config(font=(50))
            files_l_hyb.config(text="ML Component (optional):", font=(50))

            # Create add button and label below if not exist
            if add_ml is None:
                add_ml = Button(
                    files_f, padx=10, text="Add ML", command=open_keras_file
                )

            if added is None:
                added = Label(files_f, pady=10, borderwidth=1, fg="red")
            added.config(font=(50), text="NOT ADDED")

            # If the text to be converted is already hyb or has errors don't display the buttons
            if not is_hyb and error_text == "":
                if len(parameters) != 0:
                    parameters = sorted(parameters)
                if len(species) != 0:
                    species = sorted(species)
                _empty_space = Label(files_f, pady=10, text="", borderwidth=1, fg="red")
                _empty_space.grid(row=2, column=0, columnspan=3)
                files_l_hyb.grid(row=3, column=0, columnspan=2, pady=1)
                add_ml.grid(row=3, column=2, columnspan=1, pady=1)
                added.grid(row=4, column=1, columnspan=1)
            else:
                files_l_hyb.config(text="")
                files_l_hyb.grid_forget()
                add_ml.grid_forget()
                added.config(text="")
                added.grid_forget()
        except Exception as e:
            print(e)

    # Load file component
    files_l_hmod = Label(
        files_f,
        text="Choose an SBML file to load:"
        if type == "sbml"
        else "Choose an HMOD file to load:",
        borderwidth=1,
    )
    files_l_hmod.config(font=(50))
    files_l_hmod.grid(row=0, column=0, columnspan=2, pady=1)

    b_load_file = Button(
        files_f,
        padx=10,
        text="SBML File" if type == "sbml" else "HMOD File",
        command=load_file,
    )
    b_load_file.grid(row=0, column=2, columnspan=1, pady=1)

    file_selected_text = Label(files_f, text="File selected: ", borderwidth=1)
    file_selected_text.config(font=(50))
    file_selected_text.grid(row=1, column=0, columnspan=2, pady=1)

    # Name of the file selected
    global file_selected_for_conversion_l, default_file_selected_type
    if error_text != "":
        file_selected_for_conversion_l = Label(
            files_f, text="(No file selected)", borderwidth=1
        )
    elif default_file_selected_type == "":
        file_selected_for_conversion_l = Label(
            files_f,
            text="(No file selected)"
            if len(my_text.get("1.0", END)) == 1
            else "Current File",
            borderwidth=1,
        )
    elif default_file_selected_type != type:
        file_selected_for_conversion_l = Label(
            files_f, text="(No file selected)", borderwidth=1
        )
    else:
        file_selected_for_conversion_l = Label(
            files_f, text="Current File", borderwidth=1
        )

    file_selected_for_conversion_l.config(font=(50))
    file_selected_for_conversion_l.grid(row=1, column=2, columnspan=1, pady=1)

    # Confirm and Cancel buttons
    _empty_space = Label(files_f, pady=10, text="", borderwidth=1, fg="red")
    _empty_space.grid(row=5, column=0, columnspan=3)
    confirm_button = Button(files_f, padx=10, text="Confirm", command=confirm_button)
    confirm_button.grid(row=6, column=1, columnspan=1)
    cancel_button = Button(files_f, padx=10, text="Cancel", command=cancel_button)
    cancel_button.grid(row=7, column=1, columnspan=1)

    # Check if there is any previous translation being displayed
    if len(my_text.get("1.0", END)) > 1:
        global default_file_selected
        default_file_selected = True

    # Create ML Button
    files_l_hyb = Label(files_f, text="ML Component (optional):", borderwidth=1)
    files_l_hyb.config(font=(50))

    # Create add button and label below
    add_ml = Button(files_f, padx=10, text="Add ML", command=open_keras_file)
    added = Label(files_f, pady=10, text="NOT ADDED", borderwidth=1, fg="red")
    added.config(font=(50))

    # If the text to be converted is already hyb don't display the buttons
    if not is_hyb and is_hyb is not None and default_file_selected_type == type:
        if len(parameters) != 0:
            parameters = sorted(parameters)
        if len(species) != 0:
            species = sorted(species)
        _empty_space = Label(files_f, pady=10, text="", borderwidth=1, fg="red")
        _empty_space.grid(row=2, column=0, columnspan=3)
        files_l_hyb.grid(row=3, column=0, columnspan=2, pady=1)
        add_ml.grid(row=3, column=2, columnspan=1, pady=1)
        added.grid(row=4, column=1, columnspan=1)
    else:
        files_l_hyb.config(text="")
        files_l_hyb.grid_forget()
        add_ml.grid_forget()
        added.config(text="")
        added.grid_forget()


def open_keras_file():
    global parameters, species, species_checkboxes, parameters_checkboxes, first_level, second_level, file_selected

    first_level.grab_release()
    # Create new window
    second_level = Toplevel(first_level)
    second_level.grab_set()

    # sets the title of the
    # Toplevel widget
    second_level.title("Neural network")

    # sets the geometry of toplevel
    width = 500
    height = 800
    second_level.geometry("{}x{}".format(width, height))

    # Reset global variables
    def clean_global_variables():
        global warning_text_species_selected, warning_text_parameters, file_selected, species_checkboxes, parameters_checkboxes, h5_file
        warning_text_species_selected = (
            warning_text_parameters
        ) = file_selected = h5_file = ""
        species_checkboxes = parameters_checkboxes = []

    # Set X button behavior
    def on_closing():
        pass

    second_level.protocol("WM_DELETE_WINDOW", on_closing)

    # Frame container for File selection
    h5 = Frame(second_level, width=width, padx=3, pady=3)
    h5.grid_rowconfigure(0, weight=1)
    h5.grid_columnconfigure(0, weight=1)

    # Frame container for species text and checkboxes
    species_f = Frame(second_level, width=width, padx=3, pady=3)
    species_f.grid_rowconfigure(0, weight=1)
    species_f.grid_columnconfigure(0, weight=1)
    species_checkbox_holder_f = Frame(species_f, width=width - 100)
    species_checkbox_holder_f.grid(row=1, column=0, columnspan=4)
    species_checkbox_holder = scrolledtext.ScrolledText(
        species_checkbox_holder_f
    )  # , bg="gray")
    species_checkbox_holder.pack()

    # Frame container for parameters text and checkboxes
    parameters_f = Frame(second_level, width=width, padx=3, pady=3)
    parameters_f.grid_rowconfigure(0, weight=1)
    parameters_f.grid_columnconfigure(0, weight=1)
    parameter_checkbox_holder_f = Frame(parameters_f, width=width - 100)
    parameter_checkbox_holder_f.grid(row=1, column=0, columnspan=4)
    parameter_checkbox_holder = scrolledtext.ScrolledText(
        parameter_checkbox_holder_f
    )  # , bg="gray")
    parameter_checkbox_holder.pack()

    # Frame for confirm and cancel buttons
    confirm_f = Frame(second_level, width=width, padx=3, pady=3)
    confirm_f.grid_columnconfigure(0, weight=1)
    confirm_f.grid_rowconfigure(0, weight=1)

    # Set grid for frames
    h5.grid(row=0, column=0, columnspan=4)
    species_f.grid(row=3, column=0, columnspan=4)
    parameters_f.grid(row=11, column=0, columnspan=4)
    confirm_f.grid(row=20, column=0, columnspan=4)

    # Text for file selection
    h5_l = Label(h5, text="Choose a Keras H5 file to load:", borderwidth=1)
    h5_l.config(font=(50))
    h5_l.grid(row=0, columnspan=2, pady=1)

    file_selected_text = Label(h5, text="File selected: ", borderwidth=1)
    file_selected_text.config(font=(50))
    file_selected_text.grid(row=1, column=0, columnspan=2, pady=1)

    # Default text before user inputs H5 file
    file_selected = Label(h5, text="(No file selected)", borderwidth=1)
    file_selected.config(font=(50))
    file_selected.grid(row=1, column=2, columnspan=1, pady=1)

    # Button to load H5 file
    def load_h5_file():
        filename = filedialog.askopenfilename(
            title="Select A File",
            filetypes=(("h5 files", "*.h5"), ("all files", "*.*")),
        )
        if filename is None or filename == "":
            return
        try:
            global h5_file, file_selected
            h5_file = filename
            file_selected.config(text=h5_file.split("/")[-1], fg="black")
            second_level.grab_set()
        except Exception as e:
            print(e)
            h5_file = "An unexpected error as occurred"

    b = Button(h5, padx=10, text="H5 File", command=load_h5_file)
    b.grid(row=0, column=2, columnspan=1, pady=1)

    # Text for species
    species_l = Label(species_f, pady=10, text="Select model inputs:", borderwidth=1)
    species_l.config(font=(50))
    species_l.grid(row=0, columnspan=2, pady=1)

    # Text for parameters
    parameters_l = Label(
        parameters_f, pady=10, text="Select model outputs:", borderwidth=1
    )
    parameters_l.config(font=(50))
    parameters_l.grid(row=0, columnspan=2, pady=1)

    # Set of auxiliary methods to check if all properties have been inserted by the user
    def check_parameters():
        global warning_text_parameters
        for i in range(len(parameters_checkboxes)):
            if parameters_checkboxes[i][1].get() == 1:
                if warning_text_parameters != "":
                    warning_text_parameters.config(text="")
                    warning_text_parameters.grid(row=0, column=2, columnspan=1)
                return True
        warning_text_parameters = Label(
            parameters_f, pady=10, text="(Select at least one)", borderwidth=1, fg="red"
        )
        warning_text_parameters.config(font=(50))
        warning_text_parameters.grid(row=0, column=2, columnspan=1)
        return False

    def check_species():
        global warning_text_species_selected
        for i in range(len(species_checkboxes)):
            if species_checkboxes[i][1].get() == 1:
                if warning_text_species_selected != "":
                    warning_text_species_selected.config(text="")
                    warning_text_species_selected.grid(row=0, column=2, columnspan=1)
                return True
        warning_text_species_selected = Label(
            species_f, pady=10, text="(Select at least one)", borderwidth=1, fg="red"
        )
        warning_text_species_selected.config(font=(50))
        warning_text_species_selected.grid(row=0, column=2, columnspan=1)
        return False

    def h5_file_selected():
        if h5_file != "":
            return True
        file_selected.config(text="Please select a file", fg="red")
        return False

    # Create Confirm button and action associated with it
    def closing_confirm():
        global first_level, hyb_file, hmod_file_string, warning_text_parameters, is_hyb, default_file_name
        c1 = h5_file_selected()
        c2 = check_species()
        c3 = check_parameters()
        if c1 and c2 and c3:
            global added
            added.config(text="ADDED", fg="green")
            hyb_file = neural_network_parser.main(
                parameters,
                species,
                species_checkboxes,
                parameters_checkboxes,
                h5_file,
                curr_file_name if curr_file_name != "" else default_file_name,
                hmod_file_string,
            )
            if hyb_file[0] is None:
                warning_text_parameters = Label(
                    parameters_f,
                    pady=10,
                    text="(Select at most " + str(hyb_file[1]) + ")",
                    borderwidth=1,
                    fg="red",
                )
                warning_text_parameters.config(font=(50))
                warning_text_parameters.grid(row=0, column=2, columnspan=1)
                hyb_file = ""
            else:
                hyb_file = hyb_file[0]
                hmod_file_string = hyb_file[0]
                is_hyb = True
                clean_global_variables()
                second_level.destroy()
                second_level.grab_release()
                first_level.grab_set()

    _empty_space = Label(confirm_f, pady=10, text="", borderwidth=1)
    _empty_space.grid(row=0, column=1, columnspan=1)
    confirm_button = Button(confirm_f, padx=10, text="Confirm", command=closing_confirm)
    confirm_button.grid(row=1, column=1, columnspan=1)

    # Create cancel button and action associated with it
    def closing_cancel():
        global first_level
        clean_global_variables()
        second_level.grab_release()
        second_level.destroy()
        first_level.grab_set()

    cancel_button = Button(confirm_f, padx=10, text="Cancel", command=closing_cancel)
    cancel_button.grid(row=2, column=1, columnspan=1)

    # Create species Checkboxes
    species_checkboxes = []
    for sp in range(len(species)):
        check_box_var = tkinter.IntVar()
        checkbox = ttk.Checkbutton(
            species_checkbox_holder,
            text=species[sp],
            variable=check_box_var,
            onvalue=1,
            offvalue=0,
            width=width,
        )
        species_checkbox_holder.window_create("end", window=checkbox)
        species_checkbox_holder.insert("end", "\n")
        species_checkboxes.append([checkbox, check_box_var])

    # Create parameters checkboxes
    parameters_checkboxes = []
    for pm in range(len(parameters)):
        check_box_var = tkinter.IntVar()
        checkbox = ttk.Checkbutton(
            parameter_checkbox_holder,
            text=parameters[pm],
            variable=check_box_var,
            onvalue=1,
            offvalue=0,
            width=width,
        )
        parameter_checkbox_holder.window_create("end", window=checkbox)
        parameter_checkbox_holder.insert("end", "\n")
        parameters_checkboxes.append([checkbox, check_box_var])

    # Set scrollbox dimensions for each set of checkboxes and disable accidental deletion
    parameter_checkbox_holder.config(height=12, width=45)
    species_checkbox_holder.config(height=12, width=45)
    parameter_checkbox_holder["state"] = "disabled"
    species_checkbox_holder["state"] = "disabled"


def save_file():
    text2save = my_text.get("1.0", END)
    if '<?xml version="1.0" encoding="UTF-8"?>' in text2save:
        f = filedialog.asksaveasfile(mode="w", defaultextension=".xml")
    else:
        f = filedialog.asksaveasfile(mode="w", defaultextension=".hmod")
    if f is None:  # asksaveasfile return `None` if dialog closed with "cancel".
        return

    f.write(text2save)
    f.close()
    save_label.config(text="File Saved!")
    save_label.pack(side="bottom")


my_btn_export = Button(bot_frame, text="Save file", command=save_file)
my_btn_xml = Button(bot_frame, padx=10, text="Translate SBML File", command=open_xml)
my_btn_hmod = Button(bot_frame, padx=10, text="Translate HMOD File", command=open_hmod)

my_btn_xml.grid(row=1, column=0)

my_btn_hmod.grid(row=1, column=1)

root.mainloop()
